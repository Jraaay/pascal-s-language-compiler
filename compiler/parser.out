Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programstruct
Rule 1     programstruct -> program_head SEMICOLON program_body POINT
Rule 2     program_head -> PROGRAM ID LPAREN idlist RPAREN
Rule 3     program_head -> PROGRAM ID
Rule 4     program_body -> const_declarations var_declarations subprogram_declarations compound_statement
Rule 5     idlist -> idlist COM ID
Rule 6     idlist -> ID
Rule 7     const_declarations -> CONST const_declaration SEMICOLON
Rule 8     const_declarations -> <empty>
Rule 9     const_declaration -> const_declaration SEMICOLON ID EQUAL const_value
Rule 10    const_declaration -> ID EQUAL const_value
Rule 11    const_value -> ADDOP NUM
Rule 12    const_value -> ADDOP DIGITS
Rule 13    const_value -> NUM
Rule 14    const_value -> DIGITS
Rule 15    const_value -> LETTER
Rule 16    var_declarations -> VAR var_declaration SEMICOLON
Rule 17    var_declarations -> <empty>
Rule 18    var_declaration -> var_declaration SEMICOLON idlist COLON type
Rule 19    var_declaration -> idlist COLON type
Rule 20    type -> basic_type
Rule 21    type -> ARRAY LBRACKET period RBRACKET OF basic_type
Rule 22    type -> RECORD multype END
Rule 23    basic_type -> INTEGER
Rule 24    basic_type -> REAL
Rule 25    basic_type -> BOOLEAN
Rule 26    basic_type -> CHAR
Rule 27    period -> period COM DIGITS POINTTO DIGITS
Rule 28    period -> DIGITS POINTTO DIGITS
Rule 29    subprogram_declarations -> subprogram_declarations subprogram SEMICOLON
Rule 30    subprogram_declarations -> <empty>
Rule 31    subprogram -> subprogram_head SEMICOLON subprogram_body
Rule 32    seen_PROCEDURE -> <empty>
Rule 33    seen_FUNCTION -> <empty>
Rule 34    subprogram_head -> seen_PROCEDURE PROCEDURE ID formal_parameter
Rule 35    subprogram_head -> seen_FUNCTION FUNCTION ID formal_parameter COLON basic_type
Rule 36    formal_parameter -> LPAREN parameter_list RPAREN
Rule 37    formal_parameter -> <empty>
Rule 38    parameter_list -> parameter_list SEMICOLON parameter
Rule 39    parameter_list -> parameter
Rule 40    parameter -> var_parameter
Rule 41    parameter -> value_parameter
Rule 42    var_parameter -> VAR value_parameter
Rule 43    value_parameter -> idlist COLON basic_type
Rule 44    subprogram_body -> const_declarations var_declarations compound_statement
Rule 45    compound_statement -> BEGIN statement_list END
Rule 46    statement_list -> statement_list SEMICOLON statement
Rule 47    statement_list -> statement
Rule 48    statement -> variable ASSIGNOP expression
Rule 49    statement -> procedure_call
Rule 50    statement -> compound_statement
Rule 51    statement -> IF expression THEN statement else_part
Rule 52    statement -> FOR ID ASSIGNOP expression TO expression DO statement
Rule 53    statement -> READ LPAREN variable_list RPAREN
Rule 54    statement -> WRITE LPAREN expression_list RPAREN
Rule 55    statement -> WHILE expression DO statement
Rule 56    statement -> <empty>
Rule 57    variable_list -> variable_list COM variable
Rule 58    variable_list -> variable
Rule 59    variable -> ID id_varpart
Rule 60    id_varpart -> LBRACKET expression_list RBRACKET
Rule 61    id_varpart -> <empty>
Rule 62    procedure_call -> ID
Rule 63    procedure_call -> ID LPAREN expression_list RPAREN
Rule 64    else_part -> ELSE statement
Rule 65    else_part -> <empty>
Rule 66    expression_list -> expression_list COM expression
Rule 67    expression_list -> expression
Rule 68    expression -> simple_expression RELOP simple_expression
Rule 69    expression -> simple_expression
Rule 70    expression -> simple_expression EQUAL simple_expression
Rule 71    simple_expression -> simple_expression ADDOP term
Rule 72    simple_expression -> term
Rule 73    term -> term MULOP factor
Rule 74    term -> factor
Rule 75    factor -> NUM
Rule 76    factor -> DIGITS
Rule 77    factor -> variable
Rule 78    factor -> ID LPAREN expression_list RPAREN
Rule 79    factor -> LPAREN expression RPAREN
Rule 80    factor -> NOT factor
Rule 81    factor -> UMINUS factor
Rule 82    factor -> ADDOP factor
Rule 83    multype -> multype idlist COLON type SEMICOLON
Rule 84    multype -> idlist COLON type SEMICOLON

Terminals, with rules where they appear

ADDOP                : 11 12 71 82
ARRAY                : 21
ASSIGNOP             : 48 52
BEGIN                : 45
BOOLEAN              : 25
CHAR                 : 26
COLON                : 18 19 35 43 83 84
COM                  : 5 27 57 66
CONST                : 7
DIGITS               : 12 14 27 27 28 28 76
DO                   : 52 55
ELSE                 : 64
END                  : 22 45
EQUAL                : 9 10 70
FOR                  : 52
FUNCTION             : 35
ID                   : 2 3 5 6 9 10 34 35 52 59 62 63 78
IF                   : 51
INTEGER              : 23
LBRACKET             : 21 60
LETTER               : 15
LPAREN               : 2 36 53 54 63 78 79
MULOP                : 73
NOT                  : 80
NUM                  : 11 13 75
OF                   : 21
POINT                : 1
POINTTO              : 27 28
PROCEDURE            : 34
PROGRAM              : 2 3
RBRACKET             : 21 60
READ                 : 53
REAL                 : 24
RECORD               : 22
RELOP                : 68
RPAREN               : 2 36 53 54 63 78 79
SEMICOLON            : 1 7 9 16 18 29 31 38 46 83 84
THEN                 : 51
TO                   : 52
UMINUS               : 81
VAR                  : 16 42
WHILE                : 55
WRITE                : 54
error                : 

Nonterminals, with rules where they appear

basic_type           : 20 21 35 43
compound_statement   : 4 44 50
const_declaration    : 7 9
const_declarations   : 4 44
const_value          : 9 10
else_part            : 51
expression           : 48 51 52 52 55 66 67 79
expression_list      : 54 60 63 66 78
factor               : 73 74 80 81 82
formal_parameter     : 34 35
id_varpart           : 59
idlist               : 2 5 18 19 43 83 84
multype              : 22 83
parameter            : 38 39
parameter_list       : 36 38
period               : 21 27
procedure_call       : 49
program_body         : 1
program_head         : 1
programstruct        : 0
seen_FUNCTION        : 35
seen_PROCEDURE       : 34
simple_expression    : 68 68 69 70 70 71
statement            : 46 47 51 52 55 64
statement_list       : 45 46
subprogram           : 29
subprogram_body      : 31
subprogram_declarations : 4 29
subprogram_head      : 31
term                 : 71 72 73
type                 : 18 19 83 84
value_parameter      : 41 42
var_declaration      : 16 18
var_declarations     : 4 44
var_parameter        : 40
variable             : 48 57 58 77
variable_list        : 53 57

Parsing method: LALR

state 0

    (0) S' -> . programstruct
    (1) programstruct -> . program_head SEMICOLON program_body POINT
    (2) program_head -> . PROGRAM ID LPAREN idlist RPAREN
    (3) program_head -> . PROGRAM ID

    PROGRAM         shift and go to state 3

    programstruct                  shift and go to state 1
    program_head                   shift and go to state 2

state 1

    (0) S' -> programstruct .



state 2

    (1) programstruct -> program_head . SEMICOLON program_body POINT

    SEMICOLON       shift and go to state 4


state 3

    (2) program_head -> PROGRAM . ID LPAREN idlist RPAREN
    (3) program_head -> PROGRAM . ID

    ID              shift and go to state 5


state 4

    (1) programstruct -> program_head SEMICOLON . program_body POINT
    (4) program_body -> . const_declarations var_declarations subprogram_declarations compound_statement
    (7) const_declarations -> . CONST const_declaration SEMICOLON
    (8) const_declarations -> .

    CONST           shift and go to state 8
    VAR             reduce using rule 8 (const_declarations -> .)
    BEGIN           reduce using rule 8 (const_declarations -> .)
    PROCEDURE       reduce using rule 8 (const_declarations -> .)
    FUNCTION        reduce using rule 8 (const_declarations -> .)

    program_body                   shift and go to state 6
    const_declarations             shift and go to state 7

state 5

    (2) program_head -> PROGRAM ID . LPAREN idlist RPAREN
    (3) program_head -> PROGRAM ID .

    LPAREN          shift and go to state 9
    SEMICOLON       reduce using rule 3 (program_head -> PROGRAM ID .)


state 6

    (1) programstruct -> program_head SEMICOLON program_body . POINT

    POINT           shift and go to state 10


state 7

    (4) program_body -> const_declarations . var_declarations subprogram_declarations compound_statement
    (16) var_declarations -> . VAR var_declaration SEMICOLON
    (17) var_declarations -> .

    VAR             shift and go to state 12
    BEGIN           reduce using rule 17 (var_declarations -> .)
    PROCEDURE       reduce using rule 17 (var_declarations -> .)
    FUNCTION        reduce using rule 17 (var_declarations -> .)

    var_declarations               shift and go to state 11

state 8

    (7) const_declarations -> CONST . const_declaration SEMICOLON
    (9) const_declaration -> . const_declaration SEMICOLON ID EQUAL const_value
    (10) const_declaration -> . ID EQUAL const_value

    ID              shift and go to state 14

    const_declaration              shift and go to state 13

state 9

    (2) program_head -> PROGRAM ID LPAREN . idlist RPAREN
    (5) idlist -> . idlist COM ID
    (6) idlist -> . ID

    ID              shift and go to state 15

    idlist                         shift and go to state 16

state 10

    (1) programstruct -> program_head SEMICOLON program_body POINT .

    $end            reduce using rule 1 (programstruct -> program_head SEMICOLON program_body POINT .)


state 11

    (4) program_body -> const_declarations var_declarations . subprogram_declarations compound_statement
    (29) subprogram_declarations -> . subprogram_declarations subprogram SEMICOLON
    (30) subprogram_declarations -> .

    BEGIN           reduce using rule 30 (subprogram_declarations -> .)
    PROCEDURE       reduce using rule 30 (subprogram_declarations -> .)
    FUNCTION        reduce using rule 30 (subprogram_declarations -> .)

    subprogram_declarations        shift and go to state 17

state 12

    (16) var_declarations -> VAR . var_declaration SEMICOLON
    (18) var_declaration -> . var_declaration SEMICOLON idlist COLON type
    (19) var_declaration -> . idlist COLON type
    (5) idlist -> . idlist COM ID
    (6) idlist -> . ID

    ID              shift and go to state 15

    var_declaration                shift and go to state 18
    idlist                         shift and go to state 19

state 13

    (7) const_declarations -> CONST const_declaration . SEMICOLON
    (9) const_declaration -> const_declaration . SEMICOLON ID EQUAL const_value

    SEMICOLON       shift and go to state 20


state 14

    (10) const_declaration -> ID . EQUAL const_value

    EQUAL           shift and go to state 21


state 15

    (6) idlist -> ID .

    RPAREN          reduce using rule 6 (idlist -> ID .)
    COM             reduce using rule 6 (idlist -> ID .)
    COLON           reduce using rule 6 (idlist -> ID .)


state 16

    (2) program_head -> PROGRAM ID LPAREN idlist . RPAREN
    (5) idlist -> idlist . COM ID

    RPAREN          shift and go to state 22
    COM             shift and go to state 23


state 17

    (4) program_body -> const_declarations var_declarations subprogram_declarations . compound_statement
    (29) subprogram_declarations -> subprogram_declarations . subprogram SEMICOLON
    (45) compound_statement -> . BEGIN statement_list END
    (31) subprogram -> . subprogram_head SEMICOLON subprogram_body
    (34) subprogram_head -> . seen_PROCEDURE PROCEDURE ID formal_parameter
    (35) subprogram_head -> . seen_FUNCTION FUNCTION ID formal_parameter COLON basic_type
    (32) seen_PROCEDURE -> .
    (33) seen_FUNCTION -> .

    BEGIN           shift and go to state 26
    PROCEDURE       reduce using rule 32 (seen_PROCEDURE -> .)
    FUNCTION        reduce using rule 33 (seen_FUNCTION -> .)

    compound_statement             shift and go to state 24
    subprogram                     shift and go to state 25
    subprogram_head                shift and go to state 27
    seen_PROCEDURE                 shift and go to state 28
    seen_FUNCTION                  shift and go to state 29

state 18

    (16) var_declarations -> VAR var_declaration . SEMICOLON
    (18) var_declaration -> var_declaration . SEMICOLON idlist COLON type

    SEMICOLON       shift and go to state 30


state 19

    (19) var_declaration -> idlist . COLON type
    (5) idlist -> idlist . COM ID

    COLON           shift and go to state 31
    COM             shift and go to state 23


state 20

    (7) const_declarations -> CONST const_declaration SEMICOLON .
    (9) const_declaration -> const_declaration SEMICOLON . ID EQUAL const_value

    VAR             reduce using rule 7 (const_declarations -> CONST const_declaration SEMICOLON .)
    BEGIN           reduce using rule 7 (const_declarations -> CONST const_declaration SEMICOLON .)
    PROCEDURE       reduce using rule 7 (const_declarations -> CONST const_declaration SEMICOLON .)
    FUNCTION        reduce using rule 7 (const_declarations -> CONST const_declaration SEMICOLON .)
    ID              shift and go to state 32


state 21

    (10) const_declaration -> ID EQUAL . const_value
    (11) const_value -> . ADDOP NUM
    (12) const_value -> . ADDOP DIGITS
    (13) const_value -> . NUM
    (14) const_value -> . DIGITS
    (15) const_value -> . LETTER

    ADDOP           shift and go to state 34
    NUM             shift and go to state 35
    DIGITS          shift and go to state 36
    LETTER          shift and go to state 37

    const_value                    shift and go to state 33

state 22

    (2) program_head -> PROGRAM ID LPAREN idlist RPAREN .

    SEMICOLON       reduce using rule 2 (program_head -> PROGRAM ID LPAREN idlist RPAREN .)


state 23

    (5) idlist -> idlist COM . ID

    ID              shift and go to state 38


state 24

    (4) program_body -> const_declarations var_declarations subprogram_declarations compound_statement .

    POINT           reduce using rule 4 (program_body -> const_declarations var_declarations subprogram_declarations compound_statement .)


state 25

    (29) subprogram_declarations -> subprogram_declarations subprogram . SEMICOLON

    SEMICOLON       shift and go to state 39


state 26

    (45) compound_statement -> BEGIN . statement_list END
    (46) statement_list -> . statement_list SEMICOLON statement
    (47) statement_list -> . statement
    (48) statement -> . variable ASSIGNOP expression
    (49) statement -> . procedure_call
    (50) statement -> . compound_statement
    (51) statement -> . IF expression THEN statement else_part
    (52) statement -> . FOR ID ASSIGNOP expression TO expression DO statement
    (53) statement -> . READ LPAREN variable_list RPAREN
    (54) statement -> . WRITE LPAREN expression_list RPAREN
    (55) statement -> . WHILE expression DO statement
    (56) statement -> .
    (59) variable -> . ID id_varpart
    (62) procedure_call -> . ID
    (63) procedure_call -> . ID LPAREN expression_list RPAREN
    (45) compound_statement -> . BEGIN statement_list END

    IF              shift and go to state 45
    FOR             shift and go to state 46
    READ            shift and go to state 48
    WRITE           shift and go to state 49
    WHILE           shift and go to state 50
    END             reduce using rule 56 (statement -> .)
    SEMICOLON       reduce using rule 56 (statement -> .)
    ID              shift and go to state 47
    BEGIN           shift and go to state 26

    statement_list                 shift and go to state 40
    statement                      shift and go to state 41
    variable                       shift and go to state 42
    procedure_call                 shift and go to state 43
    compound_statement             shift and go to state 44

state 27

    (31) subprogram -> subprogram_head . SEMICOLON subprogram_body

    SEMICOLON       shift and go to state 51


state 28

    (34) subprogram_head -> seen_PROCEDURE . PROCEDURE ID formal_parameter

    PROCEDURE       shift and go to state 52


state 29

    (35) subprogram_head -> seen_FUNCTION . FUNCTION ID formal_parameter COLON basic_type

    FUNCTION        shift and go to state 53


state 30

    (16) var_declarations -> VAR var_declaration SEMICOLON .
    (18) var_declaration -> var_declaration SEMICOLON . idlist COLON type
    (5) idlist -> . idlist COM ID
    (6) idlist -> . ID

    BEGIN           reduce using rule 16 (var_declarations -> VAR var_declaration SEMICOLON .)
    PROCEDURE       reduce using rule 16 (var_declarations -> VAR var_declaration SEMICOLON .)
    FUNCTION        reduce using rule 16 (var_declarations -> VAR var_declaration SEMICOLON .)
    ID              shift and go to state 15

    idlist                         shift and go to state 54

state 31

    (19) var_declaration -> idlist COLON . type
    (20) type -> . basic_type
    (21) type -> . ARRAY LBRACKET period RBRACKET OF basic_type
    (22) type -> . RECORD multype END
    (23) basic_type -> . INTEGER
    (24) basic_type -> . REAL
    (25) basic_type -> . BOOLEAN
    (26) basic_type -> . CHAR

    ARRAY           shift and go to state 57
    RECORD          shift and go to state 58
    INTEGER         shift and go to state 59
    REAL            shift and go to state 60
    BOOLEAN         shift and go to state 61
    CHAR            shift and go to state 62

    type                           shift and go to state 55
    basic_type                     shift and go to state 56

state 32

    (9) const_declaration -> const_declaration SEMICOLON ID . EQUAL const_value

    EQUAL           shift and go to state 63


state 33

    (10) const_declaration -> ID EQUAL const_value .

    SEMICOLON       reduce using rule 10 (const_declaration -> ID EQUAL const_value .)


state 34

    (11) const_value -> ADDOP . NUM
    (12) const_value -> ADDOP . DIGITS

    NUM             shift and go to state 64
    DIGITS          shift and go to state 65


state 35

    (13) const_value -> NUM .

    SEMICOLON       reduce using rule 13 (const_value -> NUM .)


state 36

    (14) const_value -> DIGITS .

    SEMICOLON       reduce using rule 14 (const_value -> DIGITS .)


state 37

    (15) const_value -> LETTER .

    SEMICOLON       reduce using rule 15 (const_value -> LETTER .)


state 38

    (5) idlist -> idlist COM ID .

    RPAREN          reduce using rule 5 (idlist -> idlist COM ID .)
    COM             reduce using rule 5 (idlist -> idlist COM ID .)
    COLON           reduce using rule 5 (idlist -> idlist COM ID .)


state 39

    (29) subprogram_declarations -> subprogram_declarations subprogram SEMICOLON .

    BEGIN           reduce using rule 29 (subprogram_declarations -> subprogram_declarations subprogram SEMICOLON .)
    PROCEDURE       reduce using rule 29 (subprogram_declarations -> subprogram_declarations subprogram SEMICOLON .)
    FUNCTION        reduce using rule 29 (subprogram_declarations -> subprogram_declarations subprogram SEMICOLON .)


state 40

    (45) compound_statement -> BEGIN statement_list . END
    (46) statement_list -> statement_list . SEMICOLON statement

    END             shift and go to state 66
    SEMICOLON       shift and go to state 67


state 41

    (47) statement_list -> statement .

    END             reduce using rule 47 (statement_list -> statement .)
    SEMICOLON       reduce using rule 47 (statement_list -> statement .)


state 42

    (48) statement -> variable . ASSIGNOP expression

    ASSIGNOP        shift and go to state 68


state 43

    (49) statement -> procedure_call .

    END             reduce using rule 49 (statement -> procedure_call .)
    SEMICOLON       reduce using rule 49 (statement -> procedure_call .)
    ELSE            reduce using rule 49 (statement -> procedure_call .)


state 44

    (50) statement -> compound_statement .

    END             reduce using rule 50 (statement -> compound_statement .)
    SEMICOLON       reduce using rule 50 (statement -> compound_statement .)
    ELSE            reduce using rule 50 (statement -> compound_statement .)


state 45

    (51) statement -> IF . expression THEN statement else_part
    (68) expression -> . simple_expression RELOP simple_expression
    (69) expression -> . simple_expression
    (70) expression -> . simple_expression EQUAL simple_expression
    (71) simple_expression -> . simple_expression ADDOP term
    (72) simple_expression -> . term
    (73) term -> . term MULOP factor
    (74) term -> . factor
    (75) factor -> . NUM
    (76) factor -> . DIGITS
    (77) factor -> . variable
    (78) factor -> . ID LPAREN expression_list RPAREN
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . NOT factor
    (81) factor -> . UMINUS factor
    (82) factor -> . ADDOP factor
    (59) variable -> . ID id_varpart

    NUM             shift and go to state 74
    DIGITS          shift and go to state 75
    ID              shift and go to state 77
    LPAREN          shift and go to state 78
    NOT             shift and go to state 79
    UMINUS          shift and go to state 80
    ADDOP           shift and go to state 71

    expression                     shift and go to state 69
    simple_expression              shift and go to state 70
    term                           shift and go to state 72
    factor                         shift and go to state 73
    variable                       shift and go to state 76

state 46

    (52) statement -> FOR . ID ASSIGNOP expression TO expression DO statement

    ID              shift and go to state 81


state 47

    (59) variable -> ID . id_varpart
    (62) procedure_call -> ID .
    (63) procedure_call -> ID . LPAREN expression_list RPAREN
    (60) id_varpart -> . LBRACKET expression_list RBRACKET
    (61) id_varpart -> .

    END             reduce using rule 62 (procedure_call -> ID .)
    SEMICOLON       reduce using rule 62 (procedure_call -> ID .)
    ELSE            reduce using rule 62 (procedure_call -> ID .)
    LPAREN          shift and go to state 83
    LBRACKET        shift and go to state 84
    ASSIGNOP        reduce using rule 61 (id_varpart -> .)

    id_varpart                     shift and go to state 82

state 48

    (53) statement -> READ . LPAREN variable_list RPAREN

    LPAREN          shift and go to state 85


state 49

    (54) statement -> WRITE . LPAREN expression_list RPAREN

    LPAREN          shift and go to state 86


state 50

    (55) statement -> WHILE . expression DO statement
    (68) expression -> . simple_expression RELOP simple_expression
    (69) expression -> . simple_expression
    (70) expression -> . simple_expression EQUAL simple_expression
    (71) simple_expression -> . simple_expression ADDOP term
    (72) simple_expression -> . term
    (73) term -> . term MULOP factor
    (74) term -> . factor
    (75) factor -> . NUM
    (76) factor -> . DIGITS
    (77) factor -> . variable
    (78) factor -> . ID LPAREN expression_list RPAREN
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . NOT factor
    (81) factor -> . UMINUS factor
    (82) factor -> . ADDOP factor
    (59) variable -> . ID id_varpart

    NUM             shift and go to state 74
    DIGITS          shift and go to state 75
    ID              shift and go to state 77
    LPAREN          shift and go to state 78
    NOT             shift and go to state 79
    UMINUS          shift and go to state 80
    ADDOP           shift and go to state 71

    expression                     shift and go to state 87
    simple_expression              shift and go to state 70
    term                           shift and go to state 72
    factor                         shift and go to state 73
    variable                       shift and go to state 76

state 51

    (31) subprogram -> subprogram_head SEMICOLON . subprogram_body
    (44) subprogram_body -> . const_declarations var_declarations compound_statement
    (7) const_declarations -> . CONST const_declaration SEMICOLON
    (8) const_declarations -> .

    CONST           shift and go to state 8
    VAR             reduce using rule 8 (const_declarations -> .)
    BEGIN           reduce using rule 8 (const_declarations -> .)

    subprogram_body                shift and go to state 88
    const_declarations             shift and go to state 89

state 52

    (34) subprogram_head -> seen_PROCEDURE PROCEDURE . ID formal_parameter

    ID              shift and go to state 90


state 53

    (35) subprogram_head -> seen_FUNCTION FUNCTION . ID formal_parameter COLON basic_type

    ID              shift and go to state 91


state 54

    (18) var_declaration -> var_declaration SEMICOLON idlist . COLON type
    (5) idlist -> idlist . COM ID

    COLON           shift and go to state 92
    COM             shift and go to state 23


state 55

    (19) var_declaration -> idlist COLON type .

    SEMICOLON       reduce using rule 19 (var_declaration -> idlist COLON type .)


state 56

    (20) type -> basic_type .

    SEMICOLON       reduce using rule 20 (type -> basic_type .)


state 57

    (21) type -> ARRAY . LBRACKET period RBRACKET OF basic_type

    LBRACKET        shift and go to state 93


state 58

    (22) type -> RECORD . multype END
    (83) multype -> . multype idlist COLON type SEMICOLON
    (84) multype -> . idlist COLON type SEMICOLON
    (5) idlist -> . idlist COM ID
    (6) idlist -> . ID

    ID              shift and go to state 15

    multype                        shift and go to state 94
    idlist                         shift and go to state 95

state 59

    (23) basic_type -> INTEGER .

    SEMICOLON       reduce using rule 23 (basic_type -> INTEGER .)
    RPAREN          reduce using rule 23 (basic_type -> INTEGER .)


state 60

    (24) basic_type -> REAL .

    SEMICOLON       reduce using rule 24 (basic_type -> REAL .)
    RPAREN          reduce using rule 24 (basic_type -> REAL .)


state 61

    (25) basic_type -> BOOLEAN .

    SEMICOLON       reduce using rule 25 (basic_type -> BOOLEAN .)
    RPAREN          reduce using rule 25 (basic_type -> BOOLEAN .)


state 62

    (26) basic_type -> CHAR .

    SEMICOLON       reduce using rule 26 (basic_type -> CHAR .)
    RPAREN          reduce using rule 26 (basic_type -> CHAR .)


state 63

    (9) const_declaration -> const_declaration SEMICOLON ID EQUAL . const_value
    (11) const_value -> . ADDOP NUM
    (12) const_value -> . ADDOP DIGITS
    (13) const_value -> . NUM
    (14) const_value -> . DIGITS
    (15) const_value -> . LETTER

    ADDOP           shift and go to state 34
    NUM             shift and go to state 35
    DIGITS          shift and go to state 36
    LETTER          shift and go to state 37

    const_value                    shift and go to state 96

state 64

    (11) const_value -> ADDOP NUM .

    SEMICOLON       reduce using rule 11 (const_value -> ADDOP NUM .)


state 65

    (12) const_value -> ADDOP DIGITS .

    SEMICOLON       reduce using rule 12 (const_value -> ADDOP DIGITS .)


state 66

    (45) compound_statement -> BEGIN statement_list END .

    POINT           reduce using rule 45 (compound_statement -> BEGIN statement_list END .)
    END             reduce using rule 45 (compound_statement -> BEGIN statement_list END .)
    SEMICOLON       reduce using rule 45 (compound_statement -> BEGIN statement_list END .)
    ELSE            reduce using rule 45 (compound_statement -> BEGIN statement_list END .)


state 67

    (46) statement_list -> statement_list SEMICOLON . statement
    (48) statement -> . variable ASSIGNOP expression
    (49) statement -> . procedure_call
    (50) statement -> . compound_statement
    (51) statement -> . IF expression THEN statement else_part
    (52) statement -> . FOR ID ASSIGNOP expression TO expression DO statement
    (53) statement -> . READ LPAREN variable_list RPAREN
    (54) statement -> . WRITE LPAREN expression_list RPAREN
    (55) statement -> . WHILE expression DO statement
    (56) statement -> .
    (59) variable -> . ID id_varpart
    (62) procedure_call -> . ID
    (63) procedure_call -> . ID LPAREN expression_list RPAREN
    (45) compound_statement -> . BEGIN statement_list END

    IF              shift and go to state 45
    FOR             shift and go to state 46
    READ            shift and go to state 48
    WRITE           shift and go to state 49
    WHILE           shift and go to state 50
    END             reduce using rule 56 (statement -> .)
    SEMICOLON       reduce using rule 56 (statement -> .)
    ID              shift and go to state 47
    BEGIN           shift and go to state 26

    statement                      shift and go to state 97
    variable                       shift and go to state 42
    procedure_call                 shift and go to state 43
    compound_statement             shift and go to state 44

state 68

    (48) statement -> variable ASSIGNOP . expression
    (68) expression -> . simple_expression RELOP simple_expression
    (69) expression -> . simple_expression
    (70) expression -> . simple_expression EQUAL simple_expression
    (71) simple_expression -> . simple_expression ADDOP term
    (72) simple_expression -> . term
    (73) term -> . term MULOP factor
    (74) term -> . factor
    (75) factor -> . NUM
    (76) factor -> . DIGITS
    (77) factor -> . variable
    (78) factor -> . ID LPAREN expression_list RPAREN
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . NOT factor
    (81) factor -> . UMINUS factor
    (82) factor -> . ADDOP factor
    (59) variable -> . ID id_varpart

    NUM             shift and go to state 74
    DIGITS          shift and go to state 75
    ID              shift and go to state 77
    LPAREN          shift and go to state 78
    NOT             shift and go to state 79
    UMINUS          shift and go to state 80
    ADDOP           shift and go to state 71

    variable                       shift and go to state 76
    expression                     shift and go to state 98
    simple_expression              shift and go to state 70
    term                           shift and go to state 72
    factor                         shift and go to state 73

state 69

    (51) statement -> IF expression . THEN statement else_part

    THEN            shift and go to state 99


state 70

    (68) expression -> simple_expression . RELOP simple_expression
    (69) expression -> simple_expression .
    (70) expression -> simple_expression . EQUAL simple_expression
    (71) simple_expression -> simple_expression . ADDOP term

    RELOP           shift and go to state 100
    THEN            reduce using rule 69 (expression -> simple_expression .)
    DO              reduce using rule 69 (expression -> simple_expression .)
    END             reduce using rule 69 (expression -> simple_expression .)
    SEMICOLON       reduce using rule 69 (expression -> simple_expression .)
    ELSE            reduce using rule 69 (expression -> simple_expression .)
    RPAREN          reduce using rule 69 (expression -> simple_expression .)
    COM             reduce using rule 69 (expression -> simple_expression .)
    RBRACKET        reduce using rule 69 (expression -> simple_expression .)
    TO              reduce using rule 69 (expression -> simple_expression .)
    EQUAL           shift and go to state 101
    ADDOP           shift and go to state 102


state 71

    (82) factor -> ADDOP . factor
    (75) factor -> . NUM
    (76) factor -> . DIGITS
    (77) factor -> . variable
    (78) factor -> . ID LPAREN expression_list RPAREN
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . NOT factor
    (81) factor -> . UMINUS factor
    (82) factor -> . ADDOP factor
    (59) variable -> . ID id_varpart

    NUM             shift and go to state 74
    DIGITS          shift and go to state 75
    ID              shift and go to state 77
    LPAREN          shift and go to state 78
    NOT             shift and go to state 79
    UMINUS          shift and go to state 80
    ADDOP           shift and go to state 71

    factor                         shift and go to state 103
    variable                       shift and go to state 76

state 72

    (72) simple_expression -> term .
    (73) term -> term . MULOP factor

    RELOP           reduce using rule 72 (simple_expression -> term .)
    EQUAL           reduce using rule 72 (simple_expression -> term .)
    ADDOP           reduce using rule 72 (simple_expression -> term .)
    THEN            reduce using rule 72 (simple_expression -> term .)
    DO              reduce using rule 72 (simple_expression -> term .)
    END             reduce using rule 72 (simple_expression -> term .)
    SEMICOLON       reduce using rule 72 (simple_expression -> term .)
    ELSE            reduce using rule 72 (simple_expression -> term .)
    RPAREN          reduce using rule 72 (simple_expression -> term .)
    COM             reduce using rule 72 (simple_expression -> term .)
    RBRACKET        reduce using rule 72 (simple_expression -> term .)
    TO              reduce using rule 72 (simple_expression -> term .)
    MULOP           shift and go to state 104


state 73

    (74) term -> factor .

    MULOP           reduce using rule 74 (term -> factor .)
    RELOP           reduce using rule 74 (term -> factor .)
    EQUAL           reduce using rule 74 (term -> factor .)
    ADDOP           reduce using rule 74 (term -> factor .)
    THEN            reduce using rule 74 (term -> factor .)
    DO              reduce using rule 74 (term -> factor .)
    END             reduce using rule 74 (term -> factor .)
    SEMICOLON       reduce using rule 74 (term -> factor .)
    ELSE            reduce using rule 74 (term -> factor .)
    RPAREN          reduce using rule 74 (term -> factor .)
    COM             reduce using rule 74 (term -> factor .)
    RBRACKET        reduce using rule 74 (term -> factor .)
    TO              reduce using rule 74 (term -> factor .)


state 74

    (75) factor -> NUM .

    MULOP           reduce using rule 75 (factor -> NUM .)
    RELOP           reduce using rule 75 (factor -> NUM .)
    EQUAL           reduce using rule 75 (factor -> NUM .)
    ADDOP           reduce using rule 75 (factor -> NUM .)
    THEN            reduce using rule 75 (factor -> NUM .)
    DO              reduce using rule 75 (factor -> NUM .)
    END             reduce using rule 75 (factor -> NUM .)
    SEMICOLON       reduce using rule 75 (factor -> NUM .)
    ELSE            reduce using rule 75 (factor -> NUM .)
    RPAREN          reduce using rule 75 (factor -> NUM .)
    COM             reduce using rule 75 (factor -> NUM .)
    RBRACKET        reduce using rule 75 (factor -> NUM .)
    TO              reduce using rule 75 (factor -> NUM .)


state 75

    (76) factor -> DIGITS .

    MULOP           reduce using rule 76 (factor -> DIGITS .)
    RELOP           reduce using rule 76 (factor -> DIGITS .)
    EQUAL           reduce using rule 76 (factor -> DIGITS .)
    ADDOP           reduce using rule 76 (factor -> DIGITS .)
    THEN            reduce using rule 76 (factor -> DIGITS .)
    DO              reduce using rule 76 (factor -> DIGITS .)
    END             reduce using rule 76 (factor -> DIGITS .)
    SEMICOLON       reduce using rule 76 (factor -> DIGITS .)
    ELSE            reduce using rule 76 (factor -> DIGITS .)
    RPAREN          reduce using rule 76 (factor -> DIGITS .)
    COM             reduce using rule 76 (factor -> DIGITS .)
    RBRACKET        reduce using rule 76 (factor -> DIGITS .)
    TO              reduce using rule 76 (factor -> DIGITS .)


state 76

    (77) factor -> variable .

    MULOP           reduce using rule 77 (factor -> variable .)
    RELOP           reduce using rule 77 (factor -> variable .)
    EQUAL           reduce using rule 77 (factor -> variable .)
    ADDOP           reduce using rule 77 (factor -> variable .)
    THEN            reduce using rule 77 (factor -> variable .)
    DO              reduce using rule 77 (factor -> variable .)
    END             reduce using rule 77 (factor -> variable .)
    SEMICOLON       reduce using rule 77 (factor -> variable .)
    ELSE            reduce using rule 77 (factor -> variable .)
    RPAREN          reduce using rule 77 (factor -> variable .)
    COM             reduce using rule 77 (factor -> variable .)
    RBRACKET        reduce using rule 77 (factor -> variable .)
    TO              reduce using rule 77 (factor -> variable .)


state 77

    (78) factor -> ID . LPAREN expression_list RPAREN
    (59) variable -> ID . id_varpart
    (60) id_varpart -> . LBRACKET expression_list RBRACKET
    (61) id_varpart -> .

    LPAREN          shift and go to state 105
    LBRACKET        shift and go to state 84
    MULOP           reduce using rule 61 (id_varpart -> .)
    RELOP           reduce using rule 61 (id_varpart -> .)
    EQUAL           reduce using rule 61 (id_varpart -> .)
    ADDOP           reduce using rule 61 (id_varpart -> .)
    THEN            reduce using rule 61 (id_varpart -> .)
    DO              reduce using rule 61 (id_varpart -> .)
    END             reduce using rule 61 (id_varpart -> .)
    SEMICOLON       reduce using rule 61 (id_varpart -> .)
    ELSE            reduce using rule 61 (id_varpart -> .)
    RPAREN          reduce using rule 61 (id_varpart -> .)
    COM             reduce using rule 61 (id_varpart -> .)
    RBRACKET        reduce using rule 61 (id_varpart -> .)
    TO              reduce using rule 61 (id_varpart -> .)

    id_varpart                     shift and go to state 82

state 78

    (79) factor -> LPAREN . expression RPAREN
    (68) expression -> . simple_expression RELOP simple_expression
    (69) expression -> . simple_expression
    (70) expression -> . simple_expression EQUAL simple_expression
    (71) simple_expression -> . simple_expression ADDOP term
    (72) simple_expression -> . term
    (73) term -> . term MULOP factor
    (74) term -> . factor
    (75) factor -> . NUM
    (76) factor -> . DIGITS
    (77) factor -> . variable
    (78) factor -> . ID LPAREN expression_list RPAREN
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . NOT factor
    (81) factor -> . UMINUS factor
    (82) factor -> . ADDOP factor
    (59) variable -> . ID id_varpart

    NUM             shift and go to state 74
    DIGITS          shift and go to state 75
    ID              shift and go to state 77
    LPAREN          shift and go to state 78
    NOT             shift and go to state 79
    UMINUS          shift and go to state 80
    ADDOP           shift and go to state 71

    expression                     shift and go to state 106
    simple_expression              shift and go to state 70
    term                           shift and go to state 72
    factor                         shift and go to state 73
    variable                       shift and go to state 76

state 79

    (80) factor -> NOT . factor
    (75) factor -> . NUM
    (76) factor -> . DIGITS
    (77) factor -> . variable
    (78) factor -> . ID LPAREN expression_list RPAREN
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . NOT factor
    (81) factor -> . UMINUS factor
    (82) factor -> . ADDOP factor
    (59) variable -> . ID id_varpart

    NUM             shift and go to state 74
    DIGITS          shift and go to state 75
    ID              shift and go to state 77
    LPAREN          shift and go to state 78
    NOT             shift and go to state 79
    UMINUS          shift and go to state 80
    ADDOP           shift and go to state 71

    factor                         shift and go to state 107
    variable                       shift and go to state 76

state 80

    (81) factor -> UMINUS . factor
    (75) factor -> . NUM
    (76) factor -> . DIGITS
    (77) factor -> . variable
    (78) factor -> . ID LPAREN expression_list RPAREN
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . NOT factor
    (81) factor -> . UMINUS factor
    (82) factor -> . ADDOP factor
    (59) variable -> . ID id_varpart

    NUM             shift and go to state 74
    DIGITS          shift and go to state 75
    ID              shift and go to state 77
    LPAREN          shift and go to state 78
    NOT             shift and go to state 79
    UMINUS          shift and go to state 80
    ADDOP           shift and go to state 71

    factor                         shift and go to state 108
    variable                       shift and go to state 76

state 81

    (52) statement -> FOR ID . ASSIGNOP expression TO expression DO statement

    ASSIGNOP        shift and go to state 109


state 82

    (59) variable -> ID id_varpart .

    ASSIGNOP        reduce using rule 59 (variable -> ID id_varpart .)
    MULOP           reduce using rule 59 (variable -> ID id_varpart .)
    RELOP           reduce using rule 59 (variable -> ID id_varpart .)
    EQUAL           reduce using rule 59 (variable -> ID id_varpart .)
    ADDOP           reduce using rule 59 (variable -> ID id_varpart .)
    THEN            reduce using rule 59 (variable -> ID id_varpart .)
    DO              reduce using rule 59 (variable -> ID id_varpart .)
    END             reduce using rule 59 (variable -> ID id_varpart .)
    SEMICOLON       reduce using rule 59 (variable -> ID id_varpart .)
    ELSE            reduce using rule 59 (variable -> ID id_varpart .)
    RPAREN          reduce using rule 59 (variable -> ID id_varpart .)
    COM             reduce using rule 59 (variable -> ID id_varpart .)
    RBRACKET        reduce using rule 59 (variable -> ID id_varpart .)
    TO              reduce using rule 59 (variable -> ID id_varpart .)


state 83

    (63) procedure_call -> ID LPAREN . expression_list RPAREN
    (66) expression_list -> . expression_list COM expression
    (67) expression_list -> . expression
    (68) expression -> . simple_expression RELOP simple_expression
    (69) expression -> . simple_expression
    (70) expression -> . simple_expression EQUAL simple_expression
    (71) simple_expression -> . simple_expression ADDOP term
    (72) simple_expression -> . term
    (73) term -> . term MULOP factor
    (74) term -> . factor
    (75) factor -> . NUM
    (76) factor -> . DIGITS
    (77) factor -> . variable
    (78) factor -> . ID LPAREN expression_list RPAREN
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . NOT factor
    (81) factor -> . UMINUS factor
    (82) factor -> . ADDOP factor
    (59) variable -> . ID id_varpart

    NUM             shift and go to state 74
    DIGITS          shift and go to state 75
    ID              shift and go to state 77
    LPAREN          shift and go to state 78
    NOT             shift and go to state 79
    UMINUS          shift and go to state 80
    ADDOP           shift and go to state 71

    expression_list                shift and go to state 110
    expression                     shift and go to state 111
    simple_expression              shift and go to state 70
    term                           shift and go to state 72
    factor                         shift and go to state 73
    variable                       shift and go to state 76

state 84

    (60) id_varpart -> LBRACKET . expression_list RBRACKET
    (66) expression_list -> . expression_list COM expression
    (67) expression_list -> . expression
    (68) expression -> . simple_expression RELOP simple_expression
    (69) expression -> . simple_expression
    (70) expression -> . simple_expression EQUAL simple_expression
    (71) simple_expression -> . simple_expression ADDOP term
    (72) simple_expression -> . term
    (73) term -> . term MULOP factor
    (74) term -> . factor
    (75) factor -> . NUM
    (76) factor -> . DIGITS
    (77) factor -> . variable
    (78) factor -> . ID LPAREN expression_list RPAREN
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . NOT factor
    (81) factor -> . UMINUS factor
    (82) factor -> . ADDOP factor
    (59) variable -> . ID id_varpart

    NUM             shift and go to state 74
    DIGITS          shift and go to state 75
    ID              shift and go to state 77
    LPAREN          shift and go to state 78
    NOT             shift and go to state 79
    UMINUS          shift and go to state 80
    ADDOP           shift and go to state 71

    expression_list                shift and go to state 112
    expression                     shift and go to state 111
    simple_expression              shift and go to state 70
    term                           shift and go to state 72
    factor                         shift and go to state 73
    variable                       shift and go to state 76

state 85

    (53) statement -> READ LPAREN . variable_list RPAREN
    (57) variable_list -> . variable_list COM variable
    (58) variable_list -> . variable
    (59) variable -> . ID id_varpart

    ID              shift and go to state 115

    variable_list                  shift and go to state 113
    variable                       shift and go to state 114

state 86

    (54) statement -> WRITE LPAREN . expression_list RPAREN
    (66) expression_list -> . expression_list COM expression
    (67) expression_list -> . expression
    (68) expression -> . simple_expression RELOP simple_expression
    (69) expression -> . simple_expression
    (70) expression -> . simple_expression EQUAL simple_expression
    (71) simple_expression -> . simple_expression ADDOP term
    (72) simple_expression -> . term
    (73) term -> . term MULOP factor
    (74) term -> . factor
    (75) factor -> . NUM
    (76) factor -> . DIGITS
    (77) factor -> . variable
    (78) factor -> . ID LPAREN expression_list RPAREN
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . NOT factor
    (81) factor -> . UMINUS factor
    (82) factor -> . ADDOP factor
    (59) variable -> . ID id_varpart

    NUM             shift and go to state 74
    DIGITS          shift and go to state 75
    ID              shift and go to state 77
    LPAREN          shift and go to state 78
    NOT             shift and go to state 79
    UMINUS          shift and go to state 80
    ADDOP           shift and go to state 71

    expression_list                shift and go to state 116
    expression                     shift and go to state 111
    simple_expression              shift and go to state 70
    term                           shift and go to state 72
    factor                         shift and go to state 73
    variable                       shift and go to state 76

state 87

    (55) statement -> WHILE expression . DO statement

    DO              shift and go to state 117


state 88

    (31) subprogram -> subprogram_head SEMICOLON subprogram_body .

    SEMICOLON       reduce using rule 31 (subprogram -> subprogram_head SEMICOLON subprogram_body .)


state 89

    (44) subprogram_body -> const_declarations . var_declarations compound_statement
    (16) var_declarations -> . VAR var_declaration SEMICOLON
    (17) var_declarations -> .

    VAR             shift and go to state 12
    BEGIN           reduce using rule 17 (var_declarations -> .)

    var_declarations               shift and go to state 118

state 90

    (34) subprogram_head -> seen_PROCEDURE PROCEDURE ID . formal_parameter
    (36) formal_parameter -> . LPAREN parameter_list RPAREN
    (37) formal_parameter -> .

    LPAREN          shift and go to state 120
    SEMICOLON       reduce using rule 37 (formal_parameter -> .)

    formal_parameter               shift and go to state 119

state 91

    (35) subprogram_head -> seen_FUNCTION FUNCTION ID . formal_parameter COLON basic_type
    (36) formal_parameter -> . LPAREN parameter_list RPAREN
    (37) formal_parameter -> .

    LPAREN          shift and go to state 120
    COLON           reduce using rule 37 (formal_parameter -> .)

    formal_parameter               shift and go to state 121

state 92

    (18) var_declaration -> var_declaration SEMICOLON idlist COLON . type
    (20) type -> . basic_type
    (21) type -> . ARRAY LBRACKET period RBRACKET OF basic_type
    (22) type -> . RECORD multype END
    (23) basic_type -> . INTEGER
    (24) basic_type -> . REAL
    (25) basic_type -> . BOOLEAN
    (26) basic_type -> . CHAR

    ARRAY           shift and go to state 57
    RECORD          shift and go to state 58
    INTEGER         shift and go to state 59
    REAL            shift and go to state 60
    BOOLEAN         shift and go to state 61
    CHAR            shift and go to state 62

    type                           shift and go to state 122
    basic_type                     shift and go to state 56

state 93

    (21) type -> ARRAY LBRACKET . period RBRACKET OF basic_type
    (27) period -> . period COM DIGITS POINTTO DIGITS
    (28) period -> . DIGITS POINTTO DIGITS

    DIGITS          shift and go to state 124

    period                         shift and go to state 123

state 94

    (22) type -> RECORD multype . END
    (83) multype -> multype . idlist COLON type SEMICOLON
    (5) idlist -> . idlist COM ID
    (6) idlist -> . ID

    END             shift and go to state 125
    ID              shift and go to state 15

    idlist                         shift and go to state 126

state 95

    (84) multype -> idlist . COLON type SEMICOLON
    (5) idlist -> idlist . COM ID

    COLON           shift and go to state 127
    COM             shift and go to state 23


state 96

    (9) const_declaration -> const_declaration SEMICOLON ID EQUAL const_value .

    SEMICOLON       reduce using rule 9 (const_declaration -> const_declaration SEMICOLON ID EQUAL const_value .)


state 97

    (46) statement_list -> statement_list SEMICOLON statement .

    END             reduce using rule 46 (statement_list -> statement_list SEMICOLON statement .)
    SEMICOLON       reduce using rule 46 (statement_list -> statement_list SEMICOLON statement .)


state 98

    (48) statement -> variable ASSIGNOP expression .

    END             reduce using rule 48 (statement -> variable ASSIGNOP expression .)
    SEMICOLON       reduce using rule 48 (statement -> variable ASSIGNOP expression .)
    ELSE            reduce using rule 48 (statement -> variable ASSIGNOP expression .)


state 99

    (51) statement -> IF expression THEN . statement else_part
    (48) statement -> . variable ASSIGNOP expression
    (49) statement -> . procedure_call
    (50) statement -> . compound_statement
    (51) statement -> . IF expression THEN statement else_part
    (52) statement -> . FOR ID ASSIGNOP expression TO expression DO statement
    (53) statement -> . READ LPAREN variable_list RPAREN
    (54) statement -> . WRITE LPAREN expression_list RPAREN
    (55) statement -> . WHILE expression DO statement
    (56) statement -> .
    (59) variable -> . ID id_varpart
    (62) procedure_call -> . ID
    (63) procedure_call -> . ID LPAREN expression_list RPAREN
    (45) compound_statement -> . BEGIN statement_list END

    IF              shift and go to state 45
    FOR             shift and go to state 46
    READ            shift and go to state 48
    WRITE           shift and go to state 49
    WHILE           shift and go to state 50
    ELSE            reduce using rule 56 (statement -> .)
    END             reduce using rule 56 (statement -> .)
    SEMICOLON       reduce using rule 56 (statement -> .)
    ID              shift and go to state 47
    BEGIN           shift and go to state 26

    statement                      shift and go to state 128
    variable                       shift and go to state 42
    procedure_call                 shift and go to state 43
    compound_statement             shift and go to state 44

state 100

    (68) expression -> simple_expression RELOP . simple_expression
    (71) simple_expression -> . simple_expression ADDOP term
    (72) simple_expression -> . term
    (73) term -> . term MULOP factor
    (74) term -> . factor
    (75) factor -> . NUM
    (76) factor -> . DIGITS
    (77) factor -> . variable
    (78) factor -> . ID LPAREN expression_list RPAREN
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . NOT factor
    (81) factor -> . UMINUS factor
    (82) factor -> . ADDOP factor
    (59) variable -> . ID id_varpart

    NUM             shift and go to state 74
    DIGITS          shift and go to state 75
    ID              shift and go to state 77
    LPAREN          shift and go to state 78
    NOT             shift and go to state 79
    UMINUS          shift and go to state 80
    ADDOP           shift and go to state 71

    simple_expression              shift and go to state 129
    term                           shift and go to state 72
    factor                         shift and go to state 73
    variable                       shift and go to state 76

state 101

    (70) expression -> simple_expression EQUAL . simple_expression
    (71) simple_expression -> . simple_expression ADDOP term
    (72) simple_expression -> . term
    (73) term -> . term MULOP factor
    (74) term -> . factor
    (75) factor -> . NUM
    (76) factor -> . DIGITS
    (77) factor -> . variable
    (78) factor -> . ID LPAREN expression_list RPAREN
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . NOT factor
    (81) factor -> . UMINUS factor
    (82) factor -> . ADDOP factor
    (59) variable -> . ID id_varpart

    NUM             shift and go to state 74
    DIGITS          shift and go to state 75
    ID              shift and go to state 77
    LPAREN          shift and go to state 78
    NOT             shift and go to state 79
    UMINUS          shift and go to state 80
    ADDOP           shift and go to state 71

    simple_expression              shift and go to state 130
    term                           shift and go to state 72
    factor                         shift and go to state 73
    variable                       shift and go to state 76

state 102

    (71) simple_expression -> simple_expression ADDOP . term
    (73) term -> . term MULOP factor
    (74) term -> . factor
    (75) factor -> . NUM
    (76) factor -> . DIGITS
    (77) factor -> . variable
    (78) factor -> . ID LPAREN expression_list RPAREN
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . NOT factor
    (81) factor -> . UMINUS factor
    (82) factor -> . ADDOP factor
    (59) variable -> . ID id_varpart

    NUM             shift and go to state 74
    DIGITS          shift and go to state 75
    ID              shift and go to state 77
    LPAREN          shift and go to state 78
    NOT             shift and go to state 79
    UMINUS          shift and go to state 80
    ADDOP           shift and go to state 71

    term                           shift and go to state 131
    factor                         shift and go to state 73
    variable                       shift and go to state 76

state 103

    (82) factor -> ADDOP factor .

    MULOP           reduce using rule 82 (factor -> ADDOP factor .)
    RELOP           reduce using rule 82 (factor -> ADDOP factor .)
    EQUAL           reduce using rule 82 (factor -> ADDOP factor .)
    ADDOP           reduce using rule 82 (factor -> ADDOP factor .)
    THEN            reduce using rule 82 (factor -> ADDOP factor .)
    DO              reduce using rule 82 (factor -> ADDOP factor .)
    END             reduce using rule 82 (factor -> ADDOP factor .)
    SEMICOLON       reduce using rule 82 (factor -> ADDOP factor .)
    ELSE            reduce using rule 82 (factor -> ADDOP factor .)
    RPAREN          reduce using rule 82 (factor -> ADDOP factor .)
    COM             reduce using rule 82 (factor -> ADDOP factor .)
    RBRACKET        reduce using rule 82 (factor -> ADDOP factor .)
    TO              reduce using rule 82 (factor -> ADDOP factor .)


state 104

    (73) term -> term MULOP . factor
    (75) factor -> . NUM
    (76) factor -> . DIGITS
    (77) factor -> . variable
    (78) factor -> . ID LPAREN expression_list RPAREN
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . NOT factor
    (81) factor -> . UMINUS factor
    (82) factor -> . ADDOP factor
    (59) variable -> . ID id_varpart

    NUM             shift and go to state 74
    DIGITS          shift and go to state 75
    ID              shift and go to state 77
    LPAREN          shift and go to state 78
    NOT             shift and go to state 79
    UMINUS          shift and go to state 80
    ADDOP           shift and go to state 71

    factor                         shift and go to state 132
    variable                       shift and go to state 76

state 105

    (78) factor -> ID LPAREN . expression_list RPAREN
    (66) expression_list -> . expression_list COM expression
    (67) expression_list -> . expression
    (68) expression -> . simple_expression RELOP simple_expression
    (69) expression -> . simple_expression
    (70) expression -> . simple_expression EQUAL simple_expression
    (71) simple_expression -> . simple_expression ADDOP term
    (72) simple_expression -> . term
    (73) term -> . term MULOP factor
    (74) term -> . factor
    (75) factor -> . NUM
    (76) factor -> . DIGITS
    (77) factor -> . variable
    (78) factor -> . ID LPAREN expression_list RPAREN
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . NOT factor
    (81) factor -> . UMINUS factor
    (82) factor -> . ADDOP factor
    (59) variable -> . ID id_varpart

    NUM             shift and go to state 74
    DIGITS          shift and go to state 75
    ID              shift and go to state 77
    LPAREN          shift and go to state 78
    NOT             shift and go to state 79
    UMINUS          shift and go to state 80
    ADDOP           shift and go to state 71

    expression_list                shift and go to state 133
    expression                     shift and go to state 111
    simple_expression              shift and go to state 70
    term                           shift and go to state 72
    factor                         shift and go to state 73
    variable                       shift and go to state 76

state 106

    (79) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 134


state 107

    (80) factor -> NOT factor .

    MULOP           reduce using rule 80 (factor -> NOT factor .)
    RELOP           reduce using rule 80 (factor -> NOT factor .)
    EQUAL           reduce using rule 80 (factor -> NOT factor .)
    ADDOP           reduce using rule 80 (factor -> NOT factor .)
    THEN            reduce using rule 80 (factor -> NOT factor .)
    DO              reduce using rule 80 (factor -> NOT factor .)
    END             reduce using rule 80 (factor -> NOT factor .)
    SEMICOLON       reduce using rule 80 (factor -> NOT factor .)
    ELSE            reduce using rule 80 (factor -> NOT factor .)
    RPAREN          reduce using rule 80 (factor -> NOT factor .)
    COM             reduce using rule 80 (factor -> NOT factor .)
    RBRACKET        reduce using rule 80 (factor -> NOT factor .)
    TO              reduce using rule 80 (factor -> NOT factor .)


state 108

    (81) factor -> UMINUS factor .

    MULOP           reduce using rule 81 (factor -> UMINUS factor .)
    RELOP           reduce using rule 81 (factor -> UMINUS factor .)
    EQUAL           reduce using rule 81 (factor -> UMINUS factor .)
    ADDOP           reduce using rule 81 (factor -> UMINUS factor .)
    THEN            reduce using rule 81 (factor -> UMINUS factor .)
    DO              reduce using rule 81 (factor -> UMINUS factor .)
    END             reduce using rule 81 (factor -> UMINUS factor .)
    SEMICOLON       reduce using rule 81 (factor -> UMINUS factor .)
    ELSE            reduce using rule 81 (factor -> UMINUS factor .)
    RPAREN          reduce using rule 81 (factor -> UMINUS factor .)
    COM             reduce using rule 81 (factor -> UMINUS factor .)
    RBRACKET        reduce using rule 81 (factor -> UMINUS factor .)
    TO              reduce using rule 81 (factor -> UMINUS factor .)


state 109

    (52) statement -> FOR ID ASSIGNOP . expression TO expression DO statement
    (68) expression -> . simple_expression RELOP simple_expression
    (69) expression -> . simple_expression
    (70) expression -> . simple_expression EQUAL simple_expression
    (71) simple_expression -> . simple_expression ADDOP term
    (72) simple_expression -> . term
    (73) term -> . term MULOP factor
    (74) term -> . factor
    (75) factor -> . NUM
    (76) factor -> . DIGITS
    (77) factor -> . variable
    (78) factor -> . ID LPAREN expression_list RPAREN
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . NOT factor
    (81) factor -> . UMINUS factor
    (82) factor -> . ADDOP factor
    (59) variable -> . ID id_varpart

    NUM             shift and go to state 74
    DIGITS          shift and go to state 75
    ID              shift and go to state 77
    LPAREN          shift and go to state 78
    NOT             shift and go to state 79
    UMINUS          shift and go to state 80
    ADDOP           shift and go to state 71

    expression                     shift and go to state 135
    simple_expression              shift and go to state 70
    term                           shift and go to state 72
    factor                         shift and go to state 73
    variable                       shift and go to state 76

state 110

    (63) procedure_call -> ID LPAREN expression_list . RPAREN
    (66) expression_list -> expression_list . COM expression

    RPAREN          shift and go to state 136
    COM             shift and go to state 137


state 111

    (67) expression_list -> expression .

    RPAREN          reduce using rule 67 (expression_list -> expression .)
    COM             reduce using rule 67 (expression_list -> expression .)
    RBRACKET        reduce using rule 67 (expression_list -> expression .)


state 112

    (60) id_varpart -> LBRACKET expression_list . RBRACKET
    (66) expression_list -> expression_list . COM expression

    RBRACKET        shift and go to state 138
    COM             shift and go to state 137


state 113

    (53) statement -> READ LPAREN variable_list . RPAREN
    (57) variable_list -> variable_list . COM variable

    RPAREN          shift and go to state 139
    COM             shift and go to state 140


state 114

    (58) variable_list -> variable .

    RPAREN          reduce using rule 58 (variable_list -> variable .)
    COM             reduce using rule 58 (variable_list -> variable .)


state 115

    (59) variable -> ID . id_varpart
    (60) id_varpart -> . LBRACKET expression_list RBRACKET
    (61) id_varpart -> .

    LBRACKET        shift and go to state 84
    RPAREN          reduce using rule 61 (id_varpart -> .)
    COM             reduce using rule 61 (id_varpart -> .)

    id_varpart                     shift and go to state 82

state 116

    (54) statement -> WRITE LPAREN expression_list . RPAREN
    (66) expression_list -> expression_list . COM expression

    RPAREN          shift and go to state 141
    COM             shift and go to state 137


state 117

    (55) statement -> WHILE expression DO . statement
    (48) statement -> . variable ASSIGNOP expression
    (49) statement -> . procedure_call
    (50) statement -> . compound_statement
    (51) statement -> . IF expression THEN statement else_part
    (52) statement -> . FOR ID ASSIGNOP expression TO expression DO statement
    (53) statement -> . READ LPAREN variable_list RPAREN
    (54) statement -> . WRITE LPAREN expression_list RPAREN
    (55) statement -> . WHILE expression DO statement
    (56) statement -> .
    (59) variable -> . ID id_varpart
    (62) procedure_call -> . ID
    (63) procedure_call -> . ID LPAREN expression_list RPAREN
    (45) compound_statement -> . BEGIN statement_list END

    IF              shift and go to state 45
    FOR             shift and go to state 46
    READ            shift and go to state 48
    WRITE           shift and go to state 49
    WHILE           shift and go to state 50
    ELSE            reduce using rule 56 (statement -> .)
    END             reduce using rule 56 (statement -> .)
    SEMICOLON       reduce using rule 56 (statement -> .)
    ID              shift and go to state 47
    BEGIN           shift and go to state 26

    statement                      shift and go to state 142
    variable                       shift and go to state 42
    procedure_call                 shift and go to state 43
    compound_statement             shift and go to state 44

state 118

    (44) subprogram_body -> const_declarations var_declarations . compound_statement
    (45) compound_statement -> . BEGIN statement_list END

    BEGIN           shift and go to state 26

    compound_statement             shift and go to state 143

state 119

    (34) subprogram_head -> seen_PROCEDURE PROCEDURE ID formal_parameter .

    SEMICOLON       reduce using rule 34 (subprogram_head -> seen_PROCEDURE PROCEDURE ID formal_parameter .)


state 120

    (36) formal_parameter -> LPAREN . parameter_list RPAREN
    (38) parameter_list -> . parameter_list SEMICOLON parameter
    (39) parameter_list -> . parameter
    (40) parameter -> . var_parameter
    (41) parameter -> . value_parameter
    (42) var_parameter -> . VAR value_parameter
    (43) value_parameter -> . idlist COLON basic_type
    (5) idlist -> . idlist COM ID
    (6) idlist -> . ID

    VAR             shift and go to state 148
    ID              shift and go to state 15

    parameter_list                 shift and go to state 144
    parameter                      shift and go to state 145
    var_parameter                  shift and go to state 146
    value_parameter                shift and go to state 147
    idlist                         shift and go to state 149

state 121

    (35) subprogram_head -> seen_FUNCTION FUNCTION ID formal_parameter . COLON basic_type

    COLON           shift and go to state 150


state 122

    (18) var_declaration -> var_declaration SEMICOLON idlist COLON type .

    SEMICOLON       reduce using rule 18 (var_declaration -> var_declaration SEMICOLON idlist COLON type .)


state 123

    (21) type -> ARRAY LBRACKET period . RBRACKET OF basic_type
    (27) period -> period . COM DIGITS POINTTO DIGITS

    RBRACKET        shift and go to state 151
    COM             shift and go to state 152


state 124

    (28) period -> DIGITS . POINTTO DIGITS

    POINTTO         shift and go to state 153


state 125

    (22) type -> RECORD multype END .

    SEMICOLON       reduce using rule 22 (type -> RECORD multype END .)


state 126

    (83) multype -> multype idlist . COLON type SEMICOLON
    (5) idlist -> idlist . COM ID

    COLON           shift and go to state 154
    COM             shift and go to state 23


state 127

    (84) multype -> idlist COLON . type SEMICOLON
    (20) type -> . basic_type
    (21) type -> . ARRAY LBRACKET period RBRACKET OF basic_type
    (22) type -> . RECORD multype END
    (23) basic_type -> . INTEGER
    (24) basic_type -> . REAL
    (25) basic_type -> . BOOLEAN
    (26) basic_type -> . CHAR

    ARRAY           shift and go to state 57
    RECORD          shift and go to state 58
    INTEGER         shift and go to state 59
    REAL            shift and go to state 60
    BOOLEAN         shift and go to state 61
    CHAR            shift and go to state 62

    type                           shift and go to state 155
    basic_type                     shift and go to state 56

state 128

    (51) statement -> IF expression THEN statement . else_part
    (64) else_part -> . ELSE statement
    (65) else_part -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 157
    END             reduce using rule 65 (else_part -> .)
    SEMICOLON       reduce using rule 65 (else_part -> .)

  ! ELSE            [ reduce using rule 65 (else_part -> .) ]

    else_part                      shift and go to state 156

state 129

    (68) expression -> simple_expression RELOP simple_expression .
    (71) simple_expression -> simple_expression . ADDOP term

    THEN            reduce using rule 68 (expression -> simple_expression RELOP simple_expression .)
    DO              reduce using rule 68 (expression -> simple_expression RELOP simple_expression .)
    END             reduce using rule 68 (expression -> simple_expression RELOP simple_expression .)
    SEMICOLON       reduce using rule 68 (expression -> simple_expression RELOP simple_expression .)
    ELSE            reduce using rule 68 (expression -> simple_expression RELOP simple_expression .)
    RPAREN          reduce using rule 68 (expression -> simple_expression RELOP simple_expression .)
    COM             reduce using rule 68 (expression -> simple_expression RELOP simple_expression .)
    RBRACKET        reduce using rule 68 (expression -> simple_expression RELOP simple_expression .)
    TO              reduce using rule 68 (expression -> simple_expression RELOP simple_expression .)
    ADDOP           shift and go to state 102


state 130

    (70) expression -> simple_expression EQUAL simple_expression .
    (71) simple_expression -> simple_expression . ADDOP term

    THEN            reduce using rule 70 (expression -> simple_expression EQUAL simple_expression .)
    DO              reduce using rule 70 (expression -> simple_expression EQUAL simple_expression .)
    END             reduce using rule 70 (expression -> simple_expression EQUAL simple_expression .)
    SEMICOLON       reduce using rule 70 (expression -> simple_expression EQUAL simple_expression .)
    ELSE            reduce using rule 70 (expression -> simple_expression EQUAL simple_expression .)
    RPAREN          reduce using rule 70 (expression -> simple_expression EQUAL simple_expression .)
    COM             reduce using rule 70 (expression -> simple_expression EQUAL simple_expression .)
    RBRACKET        reduce using rule 70 (expression -> simple_expression EQUAL simple_expression .)
    TO              reduce using rule 70 (expression -> simple_expression EQUAL simple_expression .)
    ADDOP           shift and go to state 102


state 131

    (71) simple_expression -> simple_expression ADDOP term .
    (73) term -> term . MULOP factor

    RELOP           reduce using rule 71 (simple_expression -> simple_expression ADDOP term .)
    EQUAL           reduce using rule 71 (simple_expression -> simple_expression ADDOP term .)
    ADDOP           reduce using rule 71 (simple_expression -> simple_expression ADDOP term .)
    THEN            reduce using rule 71 (simple_expression -> simple_expression ADDOP term .)
    DO              reduce using rule 71 (simple_expression -> simple_expression ADDOP term .)
    END             reduce using rule 71 (simple_expression -> simple_expression ADDOP term .)
    SEMICOLON       reduce using rule 71 (simple_expression -> simple_expression ADDOP term .)
    ELSE            reduce using rule 71 (simple_expression -> simple_expression ADDOP term .)
    RPAREN          reduce using rule 71 (simple_expression -> simple_expression ADDOP term .)
    COM             reduce using rule 71 (simple_expression -> simple_expression ADDOP term .)
    RBRACKET        reduce using rule 71 (simple_expression -> simple_expression ADDOP term .)
    TO              reduce using rule 71 (simple_expression -> simple_expression ADDOP term .)
    MULOP           shift and go to state 104


state 132

    (73) term -> term MULOP factor .

    MULOP           reduce using rule 73 (term -> term MULOP factor .)
    RELOP           reduce using rule 73 (term -> term MULOP factor .)
    EQUAL           reduce using rule 73 (term -> term MULOP factor .)
    ADDOP           reduce using rule 73 (term -> term MULOP factor .)
    THEN            reduce using rule 73 (term -> term MULOP factor .)
    DO              reduce using rule 73 (term -> term MULOP factor .)
    END             reduce using rule 73 (term -> term MULOP factor .)
    SEMICOLON       reduce using rule 73 (term -> term MULOP factor .)
    ELSE            reduce using rule 73 (term -> term MULOP factor .)
    RPAREN          reduce using rule 73 (term -> term MULOP factor .)
    COM             reduce using rule 73 (term -> term MULOP factor .)
    RBRACKET        reduce using rule 73 (term -> term MULOP factor .)
    TO              reduce using rule 73 (term -> term MULOP factor .)


state 133

    (78) factor -> ID LPAREN expression_list . RPAREN
    (66) expression_list -> expression_list . COM expression

    RPAREN          shift and go to state 158
    COM             shift and go to state 137


state 134

    (79) factor -> LPAREN expression RPAREN .

    MULOP           reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    RELOP           reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    ADDOP           reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    THEN            reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    DO              reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    END             reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    COM             reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    TO              reduce using rule 79 (factor -> LPAREN expression RPAREN .)


state 135

    (52) statement -> FOR ID ASSIGNOP expression . TO expression DO statement

    TO              shift and go to state 159


state 136

    (63) procedure_call -> ID LPAREN expression_list RPAREN .

    END             reduce using rule 63 (procedure_call -> ID LPAREN expression_list RPAREN .)
    SEMICOLON       reduce using rule 63 (procedure_call -> ID LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 63 (procedure_call -> ID LPAREN expression_list RPAREN .)


state 137

    (66) expression_list -> expression_list COM . expression
    (68) expression -> . simple_expression RELOP simple_expression
    (69) expression -> . simple_expression
    (70) expression -> . simple_expression EQUAL simple_expression
    (71) simple_expression -> . simple_expression ADDOP term
    (72) simple_expression -> . term
    (73) term -> . term MULOP factor
    (74) term -> . factor
    (75) factor -> . NUM
    (76) factor -> . DIGITS
    (77) factor -> . variable
    (78) factor -> . ID LPAREN expression_list RPAREN
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . NOT factor
    (81) factor -> . UMINUS factor
    (82) factor -> . ADDOP factor
    (59) variable -> . ID id_varpart

    NUM             shift and go to state 74
    DIGITS          shift and go to state 75
    ID              shift and go to state 77
    LPAREN          shift and go to state 78
    NOT             shift and go to state 79
    UMINUS          shift and go to state 80
    ADDOP           shift and go to state 71

    expression                     shift and go to state 160
    simple_expression              shift and go to state 70
    term                           shift and go to state 72
    factor                         shift and go to state 73
    variable                       shift and go to state 76

state 138

    (60) id_varpart -> LBRACKET expression_list RBRACKET .

    ASSIGNOP        reduce using rule 60 (id_varpart -> LBRACKET expression_list RBRACKET .)
    MULOP           reduce using rule 60 (id_varpart -> LBRACKET expression_list RBRACKET .)
    RELOP           reduce using rule 60 (id_varpart -> LBRACKET expression_list RBRACKET .)
    EQUAL           reduce using rule 60 (id_varpart -> LBRACKET expression_list RBRACKET .)
    ADDOP           reduce using rule 60 (id_varpart -> LBRACKET expression_list RBRACKET .)
    THEN            reduce using rule 60 (id_varpart -> LBRACKET expression_list RBRACKET .)
    DO              reduce using rule 60 (id_varpart -> LBRACKET expression_list RBRACKET .)
    END             reduce using rule 60 (id_varpart -> LBRACKET expression_list RBRACKET .)
    SEMICOLON       reduce using rule 60 (id_varpart -> LBRACKET expression_list RBRACKET .)
    ELSE            reduce using rule 60 (id_varpart -> LBRACKET expression_list RBRACKET .)
    RPAREN          reduce using rule 60 (id_varpart -> LBRACKET expression_list RBRACKET .)
    COM             reduce using rule 60 (id_varpart -> LBRACKET expression_list RBRACKET .)
    RBRACKET        reduce using rule 60 (id_varpart -> LBRACKET expression_list RBRACKET .)
    TO              reduce using rule 60 (id_varpart -> LBRACKET expression_list RBRACKET .)


state 139

    (53) statement -> READ LPAREN variable_list RPAREN .

    END             reduce using rule 53 (statement -> READ LPAREN variable_list RPAREN .)
    SEMICOLON       reduce using rule 53 (statement -> READ LPAREN variable_list RPAREN .)
    ELSE            reduce using rule 53 (statement -> READ LPAREN variable_list RPAREN .)


state 140

    (57) variable_list -> variable_list COM . variable
    (59) variable -> . ID id_varpart

    ID              shift and go to state 115

    variable                       shift and go to state 161

state 141

    (54) statement -> WRITE LPAREN expression_list RPAREN .

    END             reduce using rule 54 (statement -> WRITE LPAREN expression_list RPAREN .)
    SEMICOLON       reduce using rule 54 (statement -> WRITE LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 54 (statement -> WRITE LPAREN expression_list RPAREN .)


state 142

    (55) statement -> WHILE expression DO statement .

    END             reduce using rule 55 (statement -> WHILE expression DO statement .)
    SEMICOLON       reduce using rule 55 (statement -> WHILE expression DO statement .)
    ELSE            reduce using rule 55 (statement -> WHILE expression DO statement .)


state 143

    (44) subprogram_body -> const_declarations var_declarations compound_statement .

    SEMICOLON       reduce using rule 44 (subprogram_body -> const_declarations var_declarations compound_statement .)


state 144

    (36) formal_parameter -> LPAREN parameter_list . RPAREN
    (38) parameter_list -> parameter_list . SEMICOLON parameter

    RPAREN          shift and go to state 162
    SEMICOLON       shift and go to state 163


state 145

    (39) parameter_list -> parameter .

    RPAREN          reduce using rule 39 (parameter_list -> parameter .)
    SEMICOLON       reduce using rule 39 (parameter_list -> parameter .)


state 146

    (40) parameter -> var_parameter .

    RPAREN          reduce using rule 40 (parameter -> var_parameter .)
    SEMICOLON       reduce using rule 40 (parameter -> var_parameter .)


state 147

    (41) parameter -> value_parameter .

    RPAREN          reduce using rule 41 (parameter -> value_parameter .)
    SEMICOLON       reduce using rule 41 (parameter -> value_parameter .)


state 148

    (42) var_parameter -> VAR . value_parameter
    (43) value_parameter -> . idlist COLON basic_type
    (5) idlist -> . idlist COM ID
    (6) idlist -> . ID

    ID              shift and go to state 15

    value_parameter                shift and go to state 164
    idlist                         shift and go to state 149

state 149

    (43) value_parameter -> idlist . COLON basic_type
    (5) idlist -> idlist . COM ID

    COLON           shift and go to state 165
    COM             shift and go to state 23


state 150

    (35) subprogram_head -> seen_FUNCTION FUNCTION ID formal_parameter COLON . basic_type
    (23) basic_type -> . INTEGER
    (24) basic_type -> . REAL
    (25) basic_type -> . BOOLEAN
    (26) basic_type -> . CHAR

    INTEGER         shift and go to state 59
    REAL            shift and go to state 60
    BOOLEAN         shift and go to state 61
    CHAR            shift and go to state 62

    basic_type                     shift and go to state 166

state 151

    (21) type -> ARRAY LBRACKET period RBRACKET . OF basic_type

    OF              shift and go to state 167


state 152

    (27) period -> period COM . DIGITS POINTTO DIGITS

    DIGITS          shift and go to state 168


state 153

    (28) period -> DIGITS POINTTO . DIGITS

    DIGITS          shift and go to state 169


state 154

    (83) multype -> multype idlist COLON . type SEMICOLON
    (20) type -> . basic_type
    (21) type -> . ARRAY LBRACKET period RBRACKET OF basic_type
    (22) type -> . RECORD multype END
    (23) basic_type -> . INTEGER
    (24) basic_type -> . REAL
    (25) basic_type -> . BOOLEAN
    (26) basic_type -> . CHAR

    ARRAY           shift and go to state 57
    RECORD          shift and go to state 58
    INTEGER         shift and go to state 59
    REAL            shift and go to state 60
    BOOLEAN         shift and go to state 61
    CHAR            shift and go to state 62

    type                           shift and go to state 170
    basic_type                     shift and go to state 56

state 155

    (84) multype -> idlist COLON type . SEMICOLON

    SEMICOLON       shift and go to state 171


state 156

    (51) statement -> IF expression THEN statement else_part .

    END             reduce using rule 51 (statement -> IF expression THEN statement else_part .)
    SEMICOLON       reduce using rule 51 (statement -> IF expression THEN statement else_part .)
    ELSE            reduce using rule 51 (statement -> IF expression THEN statement else_part .)


state 157

    (64) else_part -> ELSE . statement
    (48) statement -> . variable ASSIGNOP expression
    (49) statement -> . procedure_call
    (50) statement -> . compound_statement
    (51) statement -> . IF expression THEN statement else_part
    (52) statement -> . FOR ID ASSIGNOP expression TO expression DO statement
    (53) statement -> . READ LPAREN variable_list RPAREN
    (54) statement -> . WRITE LPAREN expression_list RPAREN
    (55) statement -> . WHILE expression DO statement
    (56) statement -> .
    (59) variable -> . ID id_varpart
    (62) procedure_call -> . ID
    (63) procedure_call -> . ID LPAREN expression_list RPAREN
    (45) compound_statement -> . BEGIN statement_list END

    IF              shift and go to state 45
    FOR             shift and go to state 46
    READ            shift and go to state 48
    WRITE           shift and go to state 49
    WHILE           shift and go to state 50
    ELSE            reduce using rule 56 (statement -> .)
    END             reduce using rule 56 (statement -> .)
    SEMICOLON       reduce using rule 56 (statement -> .)
    ID              shift and go to state 47
    BEGIN           shift and go to state 26

    statement                      shift and go to state 172
    variable                       shift and go to state 42
    procedure_call                 shift and go to state 43
    compound_statement             shift and go to state 44

state 158

    (78) factor -> ID LPAREN expression_list RPAREN .

    MULOP           reduce using rule 78 (factor -> ID LPAREN expression_list RPAREN .)
    RELOP           reduce using rule 78 (factor -> ID LPAREN expression_list RPAREN .)
    EQUAL           reduce using rule 78 (factor -> ID LPAREN expression_list RPAREN .)
    ADDOP           reduce using rule 78 (factor -> ID LPAREN expression_list RPAREN .)
    THEN            reduce using rule 78 (factor -> ID LPAREN expression_list RPAREN .)
    DO              reduce using rule 78 (factor -> ID LPAREN expression_list RPAREN .)
    END             reduce using rule 78 (factor -> ID LPAREN expression_list RPAREN .)
    SEMICOLON       reduce using rule 78 (factor -> ID LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 78 (factor -> ID LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 78 (factor -> ID LPAREN expression_list RPAREN .)
    COM             reduce using rule 78 (factor -> ID LPAREN expression_list RPAREN .)
    RBRACKET        reduce using rule 78 (factor -> ID LPAREN expression_list RPAREN .)
    TO              reduce using rule 78 (factor -> ID LPAREN expression_list RPAREN .)


state 159

    (52) statement -> FOR ID ASSIGNOP expression TO . expression DO statement
    (68) expression -> . simple_expression RELOP simple_expression
    (69) expression -> . simple_expression
    (70) expression -> . simple_expression EQUAL simple_expression
    (71) simple_expression -> . simple_expression ADDOP term
    (72) simple_expression -> . term
    (73) term -> . term MULOP factor
    (74) term -> . factor
    (75) factor -> . NUM
    (76) factor -> . DIGITS
    (77) factor -> . variable
    (78) factor -> . ID LPAREN expression_list RPAREN
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . NOT factor
    (81) factor -> . UMINUS factor
    (82) factor -> . ADDOP factor
    (59) variable -> . ID id_varpart

    NUM             shift and go to state 74
    DIGITS          shift and go to state 75
    ID              shift and go to state 77
    LPAREN          shift and go to state 78
    NOT             shift and go to state 79
    UMINUS          shift and go to state 80
    ADDOP           shift and go to state 71

    expression                     shift and go to state 173
    simple_expression              shift and go to state 70
    term                           shift and go to state 72
    factor                         shift and go to state 73
    variable                       shift and go to state 76

state 160

    (66) expression_list -> expression_list COM expression .

    RPAREN          reduce using rule 66 (expression_list -> expression_list COM expression .)
    COM             reduce using rule 66 (expression_list -> expression_list COM expression .)
    RBRACKET        reduce using rule 66 (expression_list -> expression_list COM expression .)


state 161

    (57) variable_list -> variable_list COM variable .

    RPAREN          reduce using rule 57 (variable_list -> variable_list COM variable .)
    COM             reduce using rule 57 (variable_list -> variable_list COM variable .)


state 162

    (36) formal_parameter -> LPAREN parameter_list RPAREN .

    SEMICOLON       reduce using rule 36 (formal_parameter -> LPAREN parameter_list RPAREN .)
    COLON           reduce using rule 36 (formal_parameter -> LPAREN parameter_list RPAREN .)


state 163

    (38) parameter_list -> parameter_list SEMICOLON . parameter
    (40) parameter -> . var_parameter
    (41) parameter -> . value_parameter
    (42) var_parameter -> . VAR value_parameter
    (43) value_parameter -> . idlist COLON basic_type
    (5) idlist -> . idlist COM ID
    (6) idlist -> . ID

    VAR             shift and go to state 148
    ID              shift and go to state 15

    parameter                      shift and go to state 174
    var_parameter                  shift and go to state 146
    value_parameter                shift and go to state 147
    idlist                         shift and go to state 149

state 164

    (42) var_parameter -> VAR value_parameter .

    RPAREN          reduce using rule 42 (var_parameter -> VAR value_parameter .)
    SEMICOLON       reduce using rule 42 (var_parameter -> VAR value_parameter .)


state 165

    (43) value_parameter -> idlist COLON . basic_type
    (23) basic_type -> . INTEGER
    (24) basic_type -> . REAL
    (25) basic_type -> . BOOLEAN
    (26) basic_type -> . CHAR

    INTEGER         shift and go to state 59
    REAL            shift and go to state 60
    BOOLEAN         shift and go to state 61
    CHAR            shift and go to state 62

    basic_type                     shift and go to state 175

state 166

    (35) subprogram_head -> seen_FUNCTION FUNCTION ID formal_parameter COLON basic_type .

    SEMICOLON       reduce using rule 35 (subprogram_head -> seen_FUNCTION FUNCTION ID formal_parameter COLON basic_type .)


state 167

    (21) type -> ARRAY LBRACKET period RBRACKET OF . basic_type
    (23) basic_type -> . INTEGER
    (24) basic_type -> . REAL
    (25) basic_type -> . BOOLEAN
    (26) basic_type -> . CHAR

    INTEGER         shift and go to state 59
    REAL            shift and go to state 60
    BOOLEAN         shift and go to state 61
    CHAR            shift and go to state 62

    basic_type                     shift and go to state 176

state 168

    (27) period -> period COM DIGITS . POINTTO DIGITS

    POINTTO         shift and go to state 177


state 169

    (28) period -> DIGITS POINTTO DIGITS .

    RBRACKET        reduce using rule 28 (period -> DIGITS POINTTO DIGITS .)
    COM             reduce using rule 28 (period -> DIGITS POINTTO DIGITS .)


state 170

    (83) multype -> multype idlist COLON type . SEMICOLON

    SEMICOLON       shift and go to state 178


state 171

    (84) multype -> idlist COLON type SEMICOLON .

    END             reduce using rule 84 (multype -> idlist COLON type SEMICOLON .)
    ID              reduce using rule 84 (multype -> idlist COLON type SEMICOLON .)


state 172

    (64) else_part -> ELSE statement .

    ELSE            reduce using rule 64 (else_part -> ELSE statement .)
    END             reduce using rule 64 (else_part -> ELSE statement .)
    SEMICOLON       reduce using rule 64 (else_part -> ELSE statement .)


state 173

    (52) statement -> FOR ID ASSIGNOP expression TO expression . DO statement

    DO              shift and go to state 179


state 174

    (38) parameter_list -> parameter_list SEMICOLON parameter .

    RPAREN          reduce using rule 38 (parameter_list -> parameter_list SEMICOLON parameter .)
    SEMICOLON       reduce using rule 38 (parameter_list -> parameter_list SEMICOLON parameter .)


state 175

    (43) value_parameter -> idlist COLON basic_type .

    RPAREN          reduce using rule 43 (value_parameter -> idlist COLON basic_type .)
    SEMICOLON       reduce using rule 43 (value_parameter -> idlist COLON basic_type .)


state 176

    (21) type -> ARRAY LBRACKET period RBRACKET OF basic_type .

    SEMICOLON       reduce using rule 21 (type -> ARRAY LBRACKET period RBRACKET OF basic_type .)


state 177

    (27) period -> period COM DIGITS POINTTO . DIGITS

    DIGITS          shift and go to state 180


state 178

    (83) multype -> multype idlist COLON type SEMICOLON .

    END             reduce using rule 83 (multype -> multype idlist COLON type SEMICOLON .)
    ID              reduce using rule 83 (multype -> multype idlist COLON type SEMICOLON .)


state 179

    (52) statement -> FOR ID ASSIGNOP expression TO expression DO . statement
    (48) statement -> . variable ASSIGNOP expression
    (49) statement -> . procedure_call
    (50) statement -> . compound_statement
    (51) statement -> . IF expression THEN statement else_part
    (52) statement -> . FOR ID ASSIGNOP expression TO expression DO statement
    (53) statement -> . READ LPAREN variable_list RPAREN
    (54) statement -> . WRITE LPAREN expression_list RPAREN
    (55) statement -> . WHILE expression DO statement
    (56) statement -> .
    (59) variable -> . ID id_varpart
    (62) procedure_call -> . ID
    (63) procedure_call -> . ID LPAREN expression_list RPAREN
    (45) compound_statement -> . BEGIN statement_list END

    IF              shift and go to state 45
    FOR             shift and go to state 46
    READ            shift and go to state 48
    WRITE           shift and go to state 49
    WHILE           shift and go to state 50
    ELSE            reduce using rule 56 (statement -> .)
    END             reduce using rule 56 (statement -> .)
    SEMICOLON       reduce using rule 56 (statement -> .)
    ID              shift and go to state 47
    BEGIN           shift and go to state 26

    statement                      shift and go to state 181
    variable                       shift and go to state 42
    procedure_call                 shift and go to state 43
    compound_statement             shift and go to state 44

state 180

    (27) period -> period COM DIGITS POINTTO DIGITS .

    RBRACKET        reduce using rule 27 (period -> period COM DIGITS POINTTO DIGITS .)
    COM             reduce using rule 27 (period -> period COM DIGITS POINTTO DIGITS .)


state 181

    (52) statement -> FOR ID ASSIGNOP expression TO expression DO statement .

    END             reduce using rule 52 (statement -> FOR ID ASSIGNOP expression TO expression DO statement .)
    SEMICOLON       reduce using rule 52 (statement -> FOR ID ASSIGNOP expression TO expression DO statement .)
    ELSE            reduce using rule 52 (statement -> FOR ID ASSIGNOP expression TO expression DO statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 128 resolved as shift
