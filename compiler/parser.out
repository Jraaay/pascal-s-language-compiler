Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programstruct
Rule 1     programstruct -> program_head SEMICOLON program_body POINT
Rule 2     program_head -> PROGRAM ID LPAREN idlist RPAREN
Rule 3     program_head -> PROGRAM ID
Rule 4     program_body -> const_declarations var_declarations subprogram_declarations compound_statement
Rule 5     idlist -> idlist COM ID
Rule 6     idlist -> ID
Rule 7     const_declarations -> CONST const_declaration SEMICOLON
Rule 8     const_declarations -> <empty>
Rule 9     const_declaration -> const_declaration SEMICOLON ID EQUAL const_value
Rule 10    const_declaration -> ID EQUAL const_value
Rule 11    const_value -> ADDOP NUM
Rule 12    const_value -> NUM
Rule 13    const_value -> DIGITS
Rule 14    const_value -> QUO LETTER QUO
Rule 15    var_declarations -> VAR var_declaration SEMICOLON
Rule 16    var_declarations -> <empty>
Rule 17    var_declaration -> var_declaration SEMICOLON idlist COLON type
Rule 18    var_declaration -> idlist COLON type
Rule 19    type -> basic_type
Rule 20    type -> ARRAY LBRACKET period RBRACKET OF basic_type
Rule 21    type -> RECORD multype END
Rule 22    basic_type -> INTEGER
Rule 23    basic_type -> REAL
Rule 24    basic_type -> BOOLEAN
Rule 25    basic_type -> CHAR
Rule 26    period -> period COM DIGITS POINTTO DIGITS
Rule 27    period -> DIGITS POINTTO DIGITS
Rule 28    subprogram_declarations -> subprogram_declarations subprogram SEMICOLON
Rule 29    subprogram_declarations -> <empty>
Rule 30    subprogram -> subprogram_head SEMICOLON subprogram_body
Rule 31    subprogram_head -> PROCEDURE ID formal_parameter
Rule 32    subprogram_head -> FUNCTION ID formal_parameter COLON basic_type
Rule 33    formal_parameter -> LPAREN parameter_list RPAREN
Rule 34    formal_parameter -> <empty>
Rule 35    parameter_list -> parameter_list SEMICOLON parameter
Rule 36    parameter_list -> parameter
Rule 37    parameter -> var_parameter
Rule 38    parameter -> value_parameter
Rule 39    var_parameter -> VAR value_parameter
Rule 40    value_parameter -> idlist COLON basic_type
Rule 41    subprogram_body -> const_declarations var_declarations compound_statement
Rule 42    compound_statement -> BEGIN statement_list END
Rule 43    statement_list -> statement_list SEMICOLON statement
Rule 44    statement_list -> statement
Rule 45    statement -> variable ASSIGNOP expression
Rule 46    statement -> procedure_call
Rule 47    statement -> compound_statement
Rule 48    statement -> IF expression THEN statement else_part
Rule 49    statement -> FOR ID ASSIGNOP expression TO expression DO statement
Rule 50    statement -> READ LPAREN variable_list RPAREN
Rule 51    statement -> WRITE LPAREN expression_list RPAREN
Rule 52    statement -> WHILE expression DO statement
Rule 53    statement -> <empty>
Rule 54    variable_list -> variable_list COM variable
Rule 55    variable_list -> variable
Rule 56    variable -> ID id_varpart
Rule 57    id_varpart -> LBRACKET expression_list RBRACKET
Rule 58    id_varpart -> <empty>
Rule 59    procedure_call -> ID
Rule 60    procedure_call -> ID LPAREN expression_list RPAREN
Rule 61    else_part -> ELSE statement
Rule 62    else_part -> <empty>
Rule 63    expression_list -> expression_list COM expression
Rule 64    expression_list -> expression
Rule 65    expression -> simple_expression RELOP simple_expression
Rule 66    expression -> simple_expression
Rule 67    expression -> simple_expression EQUAL simple_expression
Rule 68    simple_expression -> simple_expression ADDOP term
Rule 69    simple_expression -> term
Rule 70    term -> term MULOP factor
Rule 71    term -> factor
Rule 72    factor -> NUM
Rule 73    factor -> DIGITS
Rule 74    factor -> variable
Rule 75    factor -> ID LPAREN expression_list RPAREN
Rule 76    factor -> LPAREN expression_list RPAREN
Rule 77    factor -> NOT factor
Rule 78    factor -> UMINUS factor
Rule 79    multype -> multype ID COLON type SEMICOLON
Rule 80    multype -> ID COLON type SEMICOLON

Terminals, with rules where they appear

ADDOP                : 11 68
ARRAY                : 20
ASSIGNOP             : 45 49
BEGIN                : 42
BOOLEAN              : 24
CHAR                 : 25
COLON                : 17 18 32 40 79 80
COM                  : 5 26 54 63
CONST                : 7
DIGITS               : 13 26 26 27 27 73
DO                   : 49 52
ELSE                 : 61
END                  : 21 42
EQUAL                : 9 10 67
FOR                  : 49
FUNCTION             : 32
ID                   : 2 3 5 6 9 10 31 32 49 56 59 60 75 79 80
IF                   : 48
INTEGER              : 22
LBRACKET             : 20 57
LETTER               : 14
LPAREN               : 2 33 50 51 60 75 76
MULOP                : 70
NOT                  : 77
NUM                  : 11 12 72
OF                   : 20
POINT                : 1
POINTTO              : 26 27
PROCEDURE            : 31
PROGRAM              : 2 3
QUO                  : 14 14
RBRACKET             : 20 57
READ                 : 50
REAL                 : 23
RECORD               : 21
RELOP                : 65
RPAREN               : 2 33 50 51 60 75 76
SEMICOLON            : 1 7 9 15 17 28 30 35 43 79 80
THEN                 : 48
TO                   : 49
UMINUS               : 78
VAR                  : 15 39
WHILE                : 52
WRITE                : 51
error                : 

Nonterminals, with rules where they appear

basic_type           : 19 20 32 40
compound_statement   : 4 41 47
const_declaration    : 7 9
const_declarations   : 4 41
const_value          : 9 10
else_part            : 48
expression           : 45 48 49 49 52 63 64
expression_list      : 51 57 60 63 75 76
factor               : 70 71 77 78
formal_parameter     : 31 32
id_varpart           : 56
idlist               : 2 5 17 18 40
multype              : 21 79
parameter            : 35 36
parameter_list       : 33 35
period               : 20 26
procedure_call       : 46
program_body         : 1
program_head         : 1
programstruct        : 0
simple_expression    : 65 65 66 67 67 68
statement            : 43 44 48 49 52 61
statement_list       : 42 43
subprogram           : 28
subprogram_body      : 30
subprogram_declarations : 4 28
subprogram_head      : 30
term                 : 68 69 70
type                 : 17 18 79 80
value_parameter      : 38 39
var_declaration      : 15 17
var_declarations     : 4 41
var_parameter        : 37
variable             : 45 54 55 74
variable_list        : 50 54

Parsing method: LALR

state 0

    (0) S' -> . programstruct
    (1) programstruct -> . program_head SEMICOLON program_body POINT
    (2) program_head -> . PROGRAM ID LPAREN idlist RPAREN
    (3) program_head -> . PROGRAM ID

    PROGRAM         shift and go to state 3

    programstruct                  shift and go to state 1
    program_head                   shift and go to state 2

state 1

    (0) S' -> programstruct .



state 2

    (1) programstruct -> program_head . SEMICOLON program_body POINT

    SEMICOLON       shift and go to state 4


state 3

    (2) program_head -> PROGRAM . ID LPAREN idlist RPAREN
    (3) program_head -> PROGRAM . ID

    ID              shift and go to state 5


state 4

    (1) programstruct -> program_head SEMICOLON . program_body POINT
    (4) program_body -> . const_declarations var_declarations subprogram_declarations compound_statement
    (7) const_declarations -> . CONST const_declaration SEMICOLON
    (8) const_declarations -> .

    CONST           shift and go to state 8
    VAR             reduce using rule 8 (const_declarations -> .)
    BEGIN           reduce using rule 8 (const_declarations -> .)
    PROCEDURE       reduce using rule 8 (const_declarations -> .)
    FUNCTION        reduce using rule 8 (const_declarations -> .)

    program_body                   shift and go to state 6
    const_declarations             shift and go to state 7

state 5

    (2) program_head -> PROGRAM ID . LPAREN idlist RPAREN
    (3) program_head -> PROGRAM ID .

    LPAREN          shift and go to state 9
    SEMICOLON       reduce using rule 3 (program_head -> PROGRAM ID .)


state 6

    (1) programstruct -> program_head SEMICOLON program_body . POINT

    POINT           shift and go to state 10


state 7

    (4) program_body -> const_declarations . var_declarations subprogram_declarations compound_statement
    (15) var_declarations -> . VAR var_declaration SEMICOLON
    (16) var_declarations -> .

    VAR             shift and go to state 12
    BEGIN           reduce using rule 16 (var_declarations -> .)
    PROCEDURE       reduce using rule 16 (var_declarations -> .)
    FUNCTION        reduce using rule 16 (var_declarations -> .)

    var_declarations               shift and go to state 11

state 8

    (7) const_declarations -> CONST . const_declaration SEMICOLON
    (9) const_declaration -> . const_declaration SEMICOLON ID EQUAL const_value
    (10) const_declaration -> . ID EQUAL const_value

    ID              shift and go to state 14

    const_declaration              shift and go to state 13

state 9

    (2) program_head -> PROGRAM ID LPAREN . idlist RPAREN
    (5) idlist -> . idlist COM ID
    (6) idlist -> . ID

    ID              shift and go to state 15

    idlist                         shift and go to state 16

state 10

    (1) programstruct -> program_head SEMICOLON program_body POINT .

    $end            reduce using rule 1 (programstruct -> program_head SEMICOLON program_body POINT .)


state 11

    (4) program_body -> const_declarations var_declarations . subprogram_declarations compound_statement
    (28) subprogram_declarations -> . subprogram_declarations subprogram SEMICOLON
    (29) subprogram_declarations -> .

    BEGIN           reduce using rule 29 (subprogram_declarations -> .)
    PROCEDURE       reduce using rule 29 (subprogram_declarations -> .)
    FUNCTION        reduce using rule 29 (subprogram_declarations -> .)

    subprogram_declarations        shift and go to state 17

state 12

    (15) var_declarations -> VAR . var_declaration SEMICOLON
    (17) var_declaration -> . var_declaration SEMICOLON idlist COLON type
    (18) var_declaration -> . idlist COLON type
    (5) idlist -> . idlist COM ID
    (6) idlist -> . ID

    ID              shift and go to state 15

    var_declaration                shift and go to state 18
    idlist                         shift and go to state 19

state 13

    (7) const_declarations -> CONST const_declaration . SEMICOLON
    (9) const_declaration -> const_declaration . SEMICOLON ID EQUAL const_value

    SEMICOLON       shift and go to state 20


state 14

    (10) const_declaration -> ID . EQUAL const_value

    EQUAL           shift and go to state 21


state 15

    (6) idlist -> ID .

    RPAREN          reduce using rule 6 (idlist -> ID .)
    COM             reduce using rule 6 (idlist -> ID .)
    COLON           reduce using rule 6 (idlist -> ID .)


state 16

    (2) program_head -> PROGRAM ID LPAREN idlist . RPAREN
    (5) idlist -> idlist . COM ID

    RPAREN          shift and go to state 22
    COM             shift and go to state 23


state 17

    (4) program_body -> const_declarations var_declarations subprogram_declarations . compound_statement
    (28) subprogram_declarations -> subprogram_declarations . subprogram SEMICOLON
    (42) compound_statement -> . BEGIN statement_list END
    (30) subprogram -> . subprogram_head SEMICOLON subprogram_body
    (31) subprogram_head -> . PROCEDURE ID formal_parameter
    (32) subprogram_head -> . FUNCTION ID formal_parameter COLON basic_type

    BEGIN           shift and go to state 26
    PROCEDURE       shift and go to state 28
    FUNCTION        shift and go to state 29

    compound_statement             shift and go to state 24
    subprogram                     shift and go to state 25
    subprogram_head                shift and go to state 27

state 18

    (15) var_declarations -> VAR var_declaration . SEMICOLON
    (17) var_declaration -> var_declaration . SEMICOLON idlist COLON type

    SEMICOLON       shift and go to state 30


state 19

    (18) var_declaration -> idlist . COLON type
    (5) idlist -> idlist . COM ID

    COLON           shift and go to state 31
    COM             shift and go to state 23


state 20

    (7) const_declarations -> CONST const_declaration SEMICOLON .
    (9) const_declaration -> const_declaration SEMICOLON . ID EQUAL const_value

    VAR             reduce using rule 7 (const_declarations -> CONST const_declaration SEMICOLON .)
    BEGIN           reduce using rule 7 (const_declarations -> CONST const_declaration SEMICOLON .)
    PROCEDURE       reduce using rule 7 (const_declarations -> CONST const_declaration SEMICOLON .)
    FUNCTION        reduce using rule 7 (const_declarations -> CONST const_declaration SEMICOLON .)
    ID              shift and go to state 32


state 21

    (10) const_declaration -> ID EQUAL . const_value
    (11) const_value -> . ADDOP NUM
    (12) const_value -> . NUM
    (13) const_value -> . DIGITS
    (14) const_value -> . QUO LETTER QUO

    ADDOP           shift and go to state 34
    NUM             shift and go to state 35
    DIGITS          shift and go to state 36
    QUO             shift and go to state 37

    const_value                    shift and go to state 33

state 22

    (2) program_head -> PROGRAM ID LPAREN idlist RPAREN .

    SEMICOLON       reduce using rule 2 (program_head -> PROGRAM ID LPAREN idlist RPAREN .)


state 23

    (5) idlist -> idlist COM . ID

    ID              shift and go to state 38


state 24

    (4) program_body -> const_declarations var_declarations subprogram_declarations compound_statement .

    POINT           reduce using rule 4 (program_body -> const_declarations var_declarations subprogram_declarations compound_statement .)


state 25

    (28) subprogram_declarations -> subprogram_declarations subprogram . SEMICOLON

    SEMICOLON       shift and go to state 39


state 26

    (42) compound_statement -> BEGIN . statement_list END
    (43) statement_list -> . statement_list SEMICOLON statement
    (44) statement_list -> . statement
    (45) statement -> . variable ASSIGNOP expression
    (46) statement -> . procedure_call
    (47) statement -> . compound_statement
    (48) statement -> . IF expression THEN statement else_part
    (49) statement -> . FOR ID ASSIGNOP expression TO expression DO statement
    (50) statement -> . READ LPAREN variable_list RPAREN
    (51) statement -> . WRITE LPAREN expression_list RPAREN
    (52) statement -> . WHILE expression DO statement
    (53) statement -> .
    (56) variable -> . ID id_varpart
    (59) procedure_call -> . ID
    (60) procedure_call -> . ID LPAREN expression_list RPAREN
    (42) compound_statement -> . BEGIN statement_list END

    IF              shift and go to state 45
    FOR             shift and go to state 46
    READ            shift and go to state 48
    WRITE           shift and go to state 49
    WHILE           shift and go to state 50
    END             reduce using rule 53 (statement -> .)
    SEMICOLON       reduce using rule 53 (statement -> .)
    ID              shift and go to state 47
    BEGIN           shift and go to state 26

    statement_list                 shift and go to state 40
    statement                      shift and go to state 41
    variable                       shift and go to state 42
    procedure_call                 shift and go to state 43
    compound_statement             shift and go to state 44

state 27

    (30) subprogram -> subprogram_head . SEMICOLON subprogram_body

    SEMICOLON       shift and go to state 51


state 28

    (31) subprogram_head -> PROCEDURE . ID formal_parameter

    ID              shift and go to state 52


state 29

    (32) subprogram_head -> FUNCTION . ID formal_parameter COLON basic_type

    ID              shift and go to state 53


state 30

    (15) var_declarations -> VAR var_declaration SEMICOLON .
    (17) var_declaration -> var_declaration SEMICOLON . idlist COLON type
    (5) idlist -> . idlist COM ID
    (6) idlist -> . ID

    BEGIN           reduce using rule 15 (var_declarations -> VAR var_declaration SEMICOLON .)
    PROCEDURE       reduce using rule 15 (var_declarations -> VAR var_declaration SEMICOLON .)
    FUNCTION        reduce using rule 15 (var_declarations -> VAR var_declaration SEMICOLON .)
    ID              shift and go to state 15

    idlist                         shift and go to state 54

state 31

    (18) var_declaration -> idlist COLON . type
    (19) type -> . basic_type
    (20) type -> . ARRAY LBRACKET period RBRACKET OF basic_type
    (21) type -> . RECORD multype END
    (22) basic_type -> . INTEGER
    (23) basic_type -> . REAL
    (24) basic_type -> . BOOLEAN
    (25) basic_type -> . CHAR

    ARRAY           shift and go to state 57
    RECORD          shift and go to state 58
    INTEGER         shift and go to state 59
    REAL            shift and go to state 60
    BOOLEAN         shift and go to state 61
    CHAR            shift and go to state 62

    type                           shift and go to state 55
    basic_type                     shift and go to state 56

state 32

    (9) const_declaration -> const_declaration SEMICOLON ID . EQUAL const_value

    EQUAL           shift and go to state 63


state 33

    (10) const_declaration -> ID EQUAL const_value .

    SEMICOLON       reduce using rule 10 (const_declaration -> ID EQUAL const_value .)


state 34

    (11) const_value -> ADDOP . NUM

    NUM             shift and go to state 64


state 35

    (12) const_value -> NUM .

    SEMICOLON       reduce using rule 12 (const_value -> NUM .)


state 36

    (13) const_value -> DIGITS .

    SEMICOLON       reduce using rule 13 (const_value -> DIGITS .)


state 37

    (14) const_value -> QUO . LETTER QUO

    LETTER          shift and go to state 65


state 38

    (5) idlist -> idlist COM ID .

    RPAREN          reduce using rule 5 (idlist -> idlist COM ID .)
    COM             reduce using rule 5 (idlist -> idlist COM ID .)
    COLON           reduce using rule 5 (idlist -> idlist COM ID .)


state 39

    (28) subprogram_declarations -> subprogram_declarations subprogram SEMICOLON .

    BEGIN           reduce using rule 28 (subprogram_declarations -> subprogram_declarations subprogram SEMICOLON .)
    PROCEDURE       reduce using rule 28 (subprogram_declarations -> subprogram_declarations subprogram SEMICOLON .)
    FUNCTION        reduce using rule 28 (subprogram_declarations -> subprogram_declarations subprogram SEMICOLON .)


state 40

    (42) compound_statement -> BEGIN statement_list . END
    (43) statement_list -> statement_list . SEMICOLON statement

    END             shift and go to state 66
    SEMICOLON       shift and go to state 67


state 41

    (44) statement_list -> statement .

    END             reduce using rule 44 (statement_list -> statement .)
    SEMICOLON       reduce using rule 44 (statement_list -> statement .)


state 42

    (45) statement -> variable . ASSIGNOP expression

    ASSIGNOP        shift and go to state 68


state 43

    (46) statement -> procedure_call .

    END             reduce using rule 46 (statement -> procedure_call .)
    SEMICOLON       reduce using rule 46 (statement -> procedure_call .)
    ELSE            reduce using rule 46 (statement -> procedure_call .)


state 44

    (47) statement -> compound_statement .

    END             reduce using rule 47 (statement -> compound_statement .)
    SEMICOLON       reduce using rule 47 (statement -> compound_statement .)
    ELSE            reduce using rule 47 (statement -> compound_statement .)


state 45

    (48) statement -> IF . expression THEN statement else_part
    (65) expression -> . simple_expression RELOP simple_expression
    (66) expression -> . simple_expression
    (67) expression -> . simple_expression EQUAL simple_expression
    (68) simple_expression -> . simple_expression ADDOP term
    (69) simple_expression -> . term
    (70) term -> . term MULOP factor
    (71) term -> . factor
    (72) factor -> . NUM
    (73) factor -> . DIGITS
    (74) factor -> . variable
    (75) factor -> . ID LPAREN expression_list RPAREN
    (76) factor -> . LPAREN expression_list RPAREN
    (77) factor -> . NOT factor
    (78) factor -> . UMINUS factor
    (56) variable -> . ID id_varpart

    NUM             shift and go to state 73
    DIGITS          shift and go to state 74
    ID              shift and go to state 76
    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    UMINUS          shift and go to state 79

    expression                     shift and go to state 69
    simple_expression              shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 72
    variable                       shift and go to state 75

state 46

    (49) statement -> FOR . ID ASSIGNOP expression TO expression DO statement

    ID              shift and go to state 80


state 47

    (56) variable -> ID . id_varpart
    (59) procedure_call -> ID .
    (60) procedure_call -> ID . LPAREN expression_list RPAREN
    (57) id_varpart -> . LBRACKET expression_list RBRACKET
    (58) id_varpart -> .

    END             reduce using rule 59 (procedure_call -> ID .)
    SEMICOLON       reduce using rule 59 (procedure_call -> ID .)
    ELSE            reduce using rule 59 (procedure_call -> ID .)
    LPAREN          shift and go to state 82
    LBRACKET        shift and go to state 83
    ASSIGNOP        reduce using rule 58 (id_varpart -> .)

    id_varpart                     shift and go to state 81

state 48

    (50) statement -> READ . LPAREN variable_list RPAREN

    LPAREN          shift and go to state 84


state 49

    (51) statement -> WRITE . LPAREN expression_list RPAREN

    LPAREN          shift and go to state 85


state 50

    (52) statement -> WHILE . expression DO statement
    (65) expression -> . simple_expression RELOP simple_expression
    (66) expression -> . simple_expression
    (67) expression -> . simple_expression EQUAL simple_expression
    (68) simple_expression -> . simple_expression ADDOP term
    (69) simple_expression -> . term
    (70) term -> . term MULOP factor
    (71) term -> . factor
    (72) factor -> . NUM
    (73) factor -> . DIGITS
    (74) factor -> . variable
    (75) factor -> . ID LPAREN expression_list RPAREN
    (76) factor -> . LPAREN expression_list RPAREN
    (77) factor -> . NOT factor
    (78) factor -> . UMINUS factor
    (56) variable -> . ID id_varpart

    NUM             shift and go to state 73
    DIGITS          shift and go to state 74
    ID              shift and go to state 76
    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    UMINUS          shift and go to state 79

    expression                     shift and go to state 86
    simple_expression              shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 72
    variable                       shift and go to state 75

state 51

    (30) subprogram -> subprogram_head SEMICOLON . subprogram_body
    (41) subprogram_body -> . const_declarations var_declarations compound_statement
    (7) const_declarations -> . CONST const_declaration SEMICOLON
    (8) const_declarations -> .

    CONST           shift and go to state 8
    VAR             reduce using rule 8 (const_declarations -> .)
    BEGIN           reduce using rule 8 (const_declarations -> .)

    subprogram_body                shift and go to state 87
    const_declarations             shift and go to state 88

state 52

    (31) subprogram_head -> PROCEDURE ID . formal_parameter
    (33) formal_parameter -> . LPAREN parameter_list RPAREN
    (34) formal_parameter -> .

    LPAREN          shift and go to state 90
    SEMICOLON       reduce using rule 34 (formal_parameter -> .)

    formal_parameter               shift and go to state 89

state 53

    (32) subprogram_head -> FUNCTION ID . formal_parameter COLON basic_type
    (33) formal_parameter -> . LPAREN parameter_list RPAREN
    (34) formal_parameter -> .

    LPAREN          shift and go to state 90
    COLON           reduce using rule 34 (formal_parameter -> .)

    formal_parameter               shift and go to state 91

state 54

    (17) var_declaration -> var_declaration SEMICOLON idlist . COLON type
    (5) idlist -> idlist . COM ID

    COLON           shift and go to state 92
    COM             shift and go to state 23


state 55

    (18) var_declaration -> idlist COLON type .

    SEMICOLON       reduce using rule 18 (var_declaration -> idlist COLON type .)


state 56

    (19) type -> basic_type .

    SEMICOLON       reduce using rule 19 (type -> basic_type .)


state 57

    (20) type -> ARRAY . LBRACKET period RBRACKET OF basic_type

    LBRACKET        shift and go to state 93


state 58

    (21) type -> RECORD . multype END
    (79) multype -> . multype ID COLON type SEMICOLON
    (80) multype -> . ID COLON type SEMICOLON

    ID              shift and go to state 95

    multype                        shift and go to state 94

state 59

    (22) basic_type -> INTEGER .

    SEMICOLON       reduce using rule 22 (basic_type -> INTEGER .)
    RPAREN          reduce using rule 22 (basic_type -> INTEGER .)


state 60

    (23) basic_type -> REAL .

    SEMICOLON       reduce using rule 23 (basic_type -> REAL .)
    RPAREN          reduce using rule 23 (basic_type -> REAL .)


state 61

    (24) basic_type -> BOOLEAN .

    SEMICOLON       reduce using rule 24 (basic_type -> BOOLEAN .)
    RPAREN          reduce using rule 24 (basic_type -> BOOLEAN .)


state 62

    (25) basic_type -> CHAR .

    SEMICOLON       reduce using rule 25 (basic_type -> CHAR .)
    RPAREN          reduce using rule 25 (basic_type -> CHAR .)


state 63

    (9) const_declaration -> const_declaration SEMICOLON ID EQUAL . const_value
    (11) const_value -> . ADDOP NUM
    (12) const_value -> . NUM
    (13) const_value -> . DIGITS
    (14) const_value -> . QUO LETTER QUO

    ADDOP           shift and go to state 34
    NUM             shift and go to state 35
    DIGITS          shift and go to state 36
    QUO             shift and go to state 37

    const_value                    shift and go to state 96

state 64

    (11) const_value -> ADDOP NUM .

    SEMICOLON       reduce using rule 11 (const_value -> ADDOP NUM .)


state 65

    (14) const_value -> QUO LETTER . QUO

    QUO             shift and go to state 97


state 66

    (42) compound_statement -> BEGIN statement_list END .

    POINT           reduce using rule 42 (compound_statement -> BEGIN statement_list END .)
    END             reduce using rule 42 (compound_statement -> BEGIN statement_list END .)
    SEMICOLON       reduce using rule 42 (compound_statement -> BEGIN statement_list END .)
    ELSE            reduce using rule 42 (compound_statement -> BEGIN statement_list END .)


state 67

    (43) statement_list -> statement_list SEMICOLON . statement
    (45) statement -> . variable ASSIGNOP expression
    (46) statement -> . procedure_call
    (47) statement -> . compound_statement
    (48) statement -> . IF expression THEN statement else_part
    (49) statement -> . FOR ID ASSIGNOP expression TO expression DO statement
    (50) statement -> . READ LPAREN variable_list RPAREN
    (51) statement -> . WRITE LPAREN expression_list RPAREN
    (52) statement -> . WHILE expression DO statement
    (53) statement -> .
    (56) variable -> . ID id_varpart
    (59) procedure_call -> . ID
    (60) procedure_call -> . ID LPAREN expression_list RPAREN
    (42) compound_statement -> . BEGIN statement_list END

    IF              shift and go to state 45
    FOR             shift and go to state 46
    READ            shift and go to state 48
    WRITE           shift and go to state 49
    WHILE           shift and go to state 50
    END             reduce using rule 53 (statement -> .)
    SEMICOLON       reduce using rule 53 (statement -> .)
    ID              shift and go to state 47
    BEGIN           shift and go to state 26

    statement                      shift and go to state 98
    variable                       shift and go to state 42
    procedure_call                 shift and go to state 43
    compound_statement             shift and go to state 44

state 68

    (45) statement -> variable ASSIGNOP . expression
    (65) expression -> . simple_expression RELOP simple_expression
    (66) expression -> . simple_expression
    (67) expression -> . simple_expression EQUAL simple_expression
    (68) simple_expression -> . simple_expression ADDOP term
    (69) simple_expression -> . term
    (70) term -> . term MULOP factor
    (71) term -> . factor
    (72) factor -> . NUM
    (73) factor -> . DIGITS
    (74) factor -> . variable
    (75) factor -> . ID LPAREN expression_list RPAREN
    (76) factor -> . LPAREN expression_list RPAREN
    (77) factor -> . NOT factor
    (78) factor -> . UMINUS factor
    (56) variable -> . ID id_varpart

    NUM             shift and go to state 73
    DIGITS          shift and go to state 74
    ID              shift and go to state 76
    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    UMINUS          shift and go to state 79

    variable                       shift and go to state 75
    expression                     shift and go to state 99
    simple_expression              shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 72

state 69

    (48) statement -> IF expression . THEN statement else_part

    THEN            shift and go to state 100


state 70

    (65) expression -> simple_expression . RELOP simple_expression
    (66) expression -> simple_expression .
    (67) expression -> simple_expression . EQUAL simple_expression
    (68) simple_expression -> simple_expression . ADDOP term

    RELOP           shift and go to state 101
    THEN            reduce using rule 66 (expression -> simple_expression .)
    DO              reduce using rule 66 (expression -> simple_expression .)
    END             reduce using rule 66 (expression -> simple_expression .)
    SEMICOLON       reduce using rule 66 (expression -> simple_expression .)
    ELSE            reduce using rule 66 (expression -> simple_expression .)
    RPAREN          reduce using rule 66 (expression -> simple_expression .)
    COM             reduce using rule 66 (expression -> simple_expression .)
    RBRACKET        reduce using rule 66 (expression -> simple_expression .)
    TO              reduce using rule 66 (expression -> simple_expression .)
    EQUAL           shift and go to state 102
    ADDOP           shift and go to state 103


state 71

    (69) simple_expression -> term .
    (70) term -> term . MULOP factor

    RELOP           reduce using rule 69 (simple_expression -> term .)
    EQUAL           reduce using rule 69 (simple_expression -> term .)
    ADDOP           reduce using rule 69 (simple_expression -> term .)
    THEN            reduce using rule 69 (simple_expression -> term .)
    DO              reduce using rule 69 (simple_expression -> term .)
    END             reduce using rule 69 (simple_expression -> term .)
    SEMICOLON       reduce using rule 69 (simple_expression -> term .)
    ELSE            reduce using rule 69 (simple_expression -> term .)
    RPAREN          reduce using rule 69 (simple_expression -> term .)
    COM             reduce using rule 69 (simple_expression -> term .)
    RBRACKET        reduce using rule 69 (simple_expression -> term .)
    TO              reduce using rule 69 (simple_expression -> term .)
    MULOP           shift and go to state 104


state 72

    (71) term -> factor .

    MULOP           reduce using rule 71 (term -> factor .)
    RELOP           reduce using rule 71 (term -> factor .)
    EQUAL           reduce using rule 71 (term -> factor .)
    ADDOP           reduce using rule 71 (term -> factor .)
    THEN            reduce using rule 71 (term -> factor .)
    DO              reduce using rule 71 (term -> factor .)
    END             reduce using rule 71 (term -> factor .)
    SEMICOLON       reduce using rule 71 (term -> factor .)
    ELSE            reduce using rule 71 (term -> factor .)
    RPAREN          reduce using rule 71 (term -> factor .)
    COM             reduce using rule 71 (term -> factor .)
    RBRACKET        reduce using rule 71 (term -> factor .)
    TO              reduce using rule 71 (term -> factor .)


state 73

    (72) factor -> NUM .

    MULOP           reduce using rule 72 (factor -> NUM .)
    RELOP           reduce using rule 72 (factor -> NUM .)
    EQUAL           reduce using rule 72 (factor -> NUM .)
    ADDOP           reduce using rule 72 (factor -> NUM .)
    THEN            reduce using rule 72 (factor -> NUM .)
    DO              reduce using rule 72 (factor -> NUM .)
    END             reduce using rule 72 (factor -> NUM .)
    SEMICOLON       reduce using rule 72 (factor -> NUM .)
    ELSE            reduce using rule 72 (factor -> NUM .)
    RPAREN          reduce using rule 72 (factor -> NUM .)
    COM             reduce using rule 72 (factor -> NUM .)
    RBRACKET        reduce using rule 72 (factor -> NUM .)
    TO              reduce using rule 72 (factor -> NUM .)


state 74

    (73) factor -> DIGITS .

    MULOP           reduce using rule 73 (factor -> DIGITS .)
    RELOP           reduce using rule 73 (factor -> DIGITS .)
    EQUAL           reduce using rule 73 (factor -> DIGITS .)
    ADDOP           reduce using rule 73 (factor -> DIGITS .)
    THEN            reduce using rule 73 (factor -> DIGITS .)
    DO              reduce using rule 73 (factor -> DIGITS .)
    END             reduce using rule 73 (factor -> DIGITS .)
    SEMICOLON       reduce using rule 73 (factor -> DIGITS .)
    ELSE            reduce using rule 73 (factor -> DIGITS .)
    RPAREN          reduce using rule 73 (factor -> DIGITS .)
    COM             reduce using rule 73 (factor -> DIGITS .)
    RBRACKET        reduce using rule 73 (factor -> DIGITS .)
    TO              reduce using rule 73 (factor -> DIGITS .)


state 75

    (74) factor -> variable .

    MULOP           reduce using rule 74 (factor -> variable .)
    RELOP           reduce using rule 74 (factor -> variable .)
    EQUAL           reduce using rule 74 (factor -> variable .)
    ADDOP           reduce using rule 74 (factor -> variable .)
    THEN            reduce using rule 74 (factor -> variable .)
    DO              reduce using rule 74 (factor -> variable .)
    END             reduce using rule 74 (factor -> variable .)
    SEMICOLON       reduce using rule 74 (factor -> variable .)
    ELSE            reduce using rule 74 (factor -> variable .)
    RPAREN          reduce using rule 74 (factor -> variable .)
    COM             reduce using rule 74 (factor -> variable .)
    RBRACKET        reduce using rule 74 (factor -> variable .)
    TO              reduce using rule 74 (factor -> variable .)


state 76

    (75) factor -> ID . LPAREN expression_list RPAREN
    (56) variable -> ID . id_varpart
    (57) id_varpart -> . LBRACKET expression_list RBRACKET
    (58) id_varpart -> .

    LPAREN          shift and go to state 105
    LBRACKET        shift and go to state 83
    MULOP           reduce using rule 58 (id_varpart -> .)
    RELOP           reduce using rule 58 (id_varpart -> .)
    EQUAL           reduce using rule 58 (id_varpart -> .)
    ADDOP           reduce using rule 58 (id_varpart -> .)
    THEN            reduce using rule 58 (id_varpart -> .)
    DO              reduce using rule 58 (id_varpart -> .)
    END             reduce using rule 58 (id_varpart -> .)
    SEMICOLON       reduce using rule 58 (id_varpart -> .)
    ELSE            reduce using rule 58 (id_varpart -> .)
    RPAREN          reduce using rule 58 (id_varpart -> .)
    COM             reduce using rule 58 (id_varpart -> .)
    RBRACKET        reduce using rule 58 (id_varpart -> .)
    TO              reduce using rule 58 (id_varpart -> .)

    id_varpart                     shift and go to state 81

state 77

    (76) factor -> LPAREN . expression_list RPAREN
    (63) expression_list -> . expression_list COM expression
    (64) expression_list -> . expression
    (65) expression -> . simple_expression RELOP simple_expression
    (66) expression -> . simple_expression
    (67) expression -> . simple_expression EQUAL simple_expression
    (68) simple_expression -> . simple_expression ADDOP term
    (69) simple_expression -> . term
    (70) term -> . term MULOP factor
    (71) term -> . factor
    (72) factor -> . NUM
    (73) factor -> . DIGITS
    (74) factor -> . variable
    (75) factor -> . ID LPAREN expression_list RPAREN
    (76) factor -> . LPAREN expression_list RPAREN
    (77) factor -> . NOT factor
    (78) factor -> . UMINUS factor
    (56) variable -> . ID id_varpart

    NUM             shift and go to state 73
    DIGITS          shift and go to state 74
    ID              shift and go to state 76
    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    UMINUS          shift and go to state 79

    expression_list                shift and go to state 106
    expression                     shift and go to state 107
    simple_expression              shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 72
    variable                       shift and go to state 75

state 78

    (77) factor -> NOT . factor
    (72) factor -> . NUM
    (73) factor -> . DIGITS
    (74) factor -> . variable
    (75) factor -> . ID LPAREN expression_list RPAREN
    (76) factor -> . LPAREN expression_list RPAREN
    (77) factor -> . NOT factor
    (78) factor -> . UMINUS factor
    (56) variable -> . ID id_varpart

    NUM             shift and go to state 73
    DIGITS          shift and go to state 74
    ID              shift and go to state 76
    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    UMINUS          shift and go to state 79

    factor                         shift and go to state 108
    variable                       shift and go to state 75

state 79

    (78) factor -> UMINUS . factor
    (72) factor -> . NUM
    (73) factor -> . DIGITS
    (74) factor -> . variable
    (75) factor -> . ID LPAREN expression_list RPAREN
    (76) factor -> . LPAREN expression_list RPAREN
    (77) factor -> . NOT factor
    (78) factor -> . UMINUS factor
    (56) variable -> . ID id_varpart

    NUM             shift and go to state 73
    DIGITS          shift and go to state 74
    ID              shift and go to state 76
    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    UMINUS          shift and go to state 79

    factor                         shift and go to state 109
    variable                       shift and go to state 75

state 80

    (49) statement -> FOR ID . ASSIGNOP expression TO expression DO statement

    ASSIGNOP        shift and go to state 110


state 81

    (56) variable -> ID id_varpart .

    ASSIGNOP        reduce using rule 56 (variable -> ID id_varpart .)
    MULOP           reduce using rule 56 (variable -> ID id_varpart .)
    RELOP           reduce using rule 56 (variable -> ID id_varpart .)
    EQUAL           reduce using rule 56 (variable -> ID id_varpart .)
    ADDOP           reduce using rule 56 (variable -> ID id_varpart .)
    THEN            reduce using rule 56 (variable -> ID id_varpart .)
    DO              reduce using rule 56 (variable -> ID id_varpart .)
    END             reduce using rule 56 (variable -> ID id_varpart .)
    SEMICOLON       reduce using rule 56 (variable -> ID id_varpart .)
    ELSE            reduce using rule 56 (variable -> ID id_varpart .)
    RPAREN          reduce using rule 56 (variable -> ID id_varpart .)
    COM             reduce using rule 56 (variable -> ID id_varpart .)
    RBRACKET        reduce using rule 56 (variable -> ID id_varpart .)
    TO              reduce using rule 56 (variable -> ID id_varpart .)


state 82

    (60) procedure_call -> ID LPAREN . expression_list RPAREN
    (63) expression_list -> . expression_list COM expression
    (64) expression_list -> . expression
    (65) expression -> . simple_expression RELOP simple_expression
    (66) expression -> . simple_expression
    (67) expression -> . simple_expression EQUAL simple_expression
    (68) simple_expression -> . simple_expression ADDOP term
    (69) simple_expression -> . term
    (70) term -> . term MULOP factor
    (71) term -> . factor
    (72) factor -> . NUM
    (73) factor -> . DIGITS
    (74) factor -> . variable
    (75) factor -> . ID LPAREN expression_list RPAREN
    (76) factor -> . LPAREN expression_list RPAREN
    (77) factor -> . NOT factor
    (78) factor -> . UMINUS factor
    (56) variable -> . ID id_varpart

    NUM             shift and go to state 73
    DIGITS          shift and go to state 74
    ID              shift and go to state 76
    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    UMINUS          shift and go to state 79

    expression_list                shift and go to state 111
    expression                     shift and go to state 107
    simple_expression              shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 72
    variable                       shift and go to state 75

state 83

    (57) id_varpart -> LBRACKET . expression_list RBRACKET
    (63) expression_list -> . expression_list COM expression
    (64) expression_list -> . expression
    (65) expression -> . simple_expression RELOP simple_expression
    (66) expression -> . simple_expression
    (67) expression -> . simple_expression EQUAL simple_expression
    (68) simple_expression -> . simple_expression ADDOP term
    (69) simple_expression -> . term
    (70) term -> . term MULOP factor
    (71) term -> . factor
    (72) factor -> . NUM
    (73) factor -> . DIGITS
    (74) factor -> . variable
    (75) factor -> . ID LPAREN expression_list RPAREN
    (76) factor -> . LPAREN expression_list RPAREN
    (77) factor -> . NOT factor
    (78) factor -> . UMINUS factor
    (56) variable -> . ID id_varpart

    NUM             shift and go to state 73
    DIGITS          shift and go to state 74
    ID              shift and go to state 76
    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    UMINUS          shift and go to state 79

    expression_list                shift and go to state 112
    expression                     shift and go to state 107
    simple_expression              shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 72
    variable                       shift and go to state 75

state 84

    (50) statement -> READ LPAREN . variable_list RPAREN
    (54) variable_list -> . variable_list COM variable
    (55) variable_list -> . variable
    (56) variable -> . ID id_varpart

    ID              shift and go to state 115

    variable_list                  shift and go to state 113
    variable                       shift and go to state 114

state 85

    (51) statement -> WRITE LPAREN . expression_list RPAREN
    (63) expression_list -> . expression_list COM expression
    (64) expression_list -> . expression
    (65) expression -> . simple_expression RELOP simple_expression
    (66) expression -> . simple_expression
    (67) expression -> . simple_expression EQUAL simple_expression
    (68) simple_expression -> . simple_expression ADDOP term
    (69) simple_expression -> . term
    (70) term -> . term MULOP factor
    (71) term -> . factor
    (72) factor -> . NUM
    (73) factor -> . DIGITS
    (74) factor -> . variable
    (75) factor -> . ID LPAREN expression_list RPAREN
    (76) factor -> . LPAREN expression_list RPAREN
    (77) factor -> . NOT factor
    (78) factor -> . UMINUS factor
    (56) variable -> . ID id_varpart

    NUM             shift and go to state 73
    DIGITS          shift and go to state 74
    ID              shift and go to state 76
    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    UMINUS          shift and go to state 79

    expression_list                shift and go to state 116
    expression                     shift and go to state 107
    simple_expression              shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 72
    variable                       shift and go to state 75

state 86

    (52) statement -> WHILE expression . DO statement

    DO              shift and go to state 117


state 87

    (30) subprogram -> subprogram_head SEMICOLON subprogram_body .

    SEMICOLON       reduce using rule 30 (subprogram -> subprogram_head SEMICOLON subprogram_body .)


state 88

    (41) subprogram_body -> const_declarations . var_declarations compound_statement
    (15) var_declarations -> . VAR var_declaration SEMICOLON
    (16) var_declarations -> .

    VAR             shift and go to state 12
    BEGIN           reduce using rule 16 (var_declarations -> .)

    var_declarations               shift and go to state 118

state 89

    (31) subprogram_head -> PROCEDURE ID formal_parameter .

    SEMICOLON       reduce using rule 31 (subprogram_head -> PROCEDURE ID formal_parameter .)


state 90

    (33) formal_parameter -> LPAREN . parameter_list RPAREN
    (35) parameter_list -> . parameter_list SEMICOLON parameter
    (36) parameter_list -> . parameter
    (37) parameter -> . var_parameter
    (38) parameter -> . value_parameter
    (39) var_parameter -> . VAR value_parameter
    (40) value_parameter -> . idlist COLON basic_type
    (5) idlist -> . idlist COM ID
    (6) idlist -> . ID

    VAR             shift and go to state 123
    ID              shift and go to state 15

    parameter_list                 shift and go to state 119
    parameter                      shift and go to state 120
    var_parameter                  shift and go to state 121
    value_parameter                shift and go to state 122
    idlist                         shift and go to state 124

state 91

    (32) subprogram_head -> FUNCTION ID formal_parameter . COLON basic_type

    COLON           shift and go to state 125


state 92

    (17) var_declaration -> var_declaration SEMICOLON idlist COLON . type
    (19) type -> . basic_type
    (20) type -> . ARRAY LBRACKET period RBRACKET OF basic_type
    (21) type -> . RECORD multype END
    (22) basic_type -> . INTEGER
    (23) basic_type -> . REAL
    (24) basic_type -> . BOOLEAN
    (25) basic_type -> . CHAR

    ARRAY           shift and go to state 57
    RECORD          shift and go to state 58
    INTEGER         shift and go to state 59
    REAL            shift and go to state 60
    BOOLEAN         shift and go to state 61
    CHAR            shift and go to state 62

    type                           shift and go to state 126
    basic_type                     shift and go to state 56

state 93

    (20) type -> ARRAY LBRACKET . period RBRACKET OF basic_type
    (26) period -> . period COM DIGITS POINTTO DIGITS
    (27) period -> . DIGITS POINTTO DIGITS

    DIGITS          shift and go to state 128

    period                         shift and go to state 127

state 94

    (21) type -> RECORD multype . END
    (79) multype -> multype . ID COLON type SEMICOLON

    END             shift and go to state 129
    ID              shift and go to state 130


state 95

    (80) multype -> ID . COLON type SEMICOLON

    COLON           shift and go to state 131


state 96

    (9) const_declaration -> const_declaration SEMICOLON ID EQUAL const_value .

    SEMICOLON       reduce using rule 9 (const_declaration -> const_declaration SEMICOLON ID EQUAL const_value .)


state 97

    (14) const_value -> QUO LETTER QUO .

    SEMICOLON       reduce using rule 14 (const_value -> QUO LETTER QUO .)


state 98

    (43) statement_list -> statement_list SEMICOLON statement .

    END             reduce using rule 43 (statement_list -> statement_list SEMICOLON statement .)
    SEMICOLON       reduce using rule 43 (statement_list -> statement_list SEMICOLON statement .)


state 99

    (45) statement -> variable ASSIGNOP expression .

    END             reduce using rule 45 (statement -> variable ASSIGNOP expression .)
    SEMICOLON       reduce using rule 45 (statement -> variable ASSIGNOP expression .)
    ELSE            reduce using rule 45 (statement -> variable ASSIGNOP expression .)


state 100

    (48) statement -> IF expression THEN . statement else_part
    (45) statement -> . variable ASSIGNOP expression
    (46) statement -> . procedure_call
    (47) statement -> . compound_statement
    (48) statement -> . IF expression THEN statement else_part
    (49) statement -> . FOR ID ASSIGNOP expression TO expression DO statement
    (50) statement -> . READ LPAREN variable_list RPAREN
    (51) statement -> . WRITE LPAREN expression_list RPAREN
    (52) statement -> . WHILE expression DO statement
    (53) statement -> .
    (56) variable -> . ID id_varpart
    (59) procedure_call -> . ID
    (60) procedure_call -> . ID LPAREN expression_list RPAREN
    (42) compound_statement -> . BEGIN statement_list END

    IF              shift and go to state 45
    FOR             shift and go to state 46
    READ            shift and go to state 48
    WRITE           shift and go to state 49
    WHILE           shift and go to state 50
    ELSE            reduce using rule 53 (statement -> .)
    END             reduce using rule 53 (statement -> .)
    SEMICOLON       reduce using rule 53 (statement -> .)
    ID              shift and go to state 47
    BEGIN           shift and go to state 26

    statement                      shift and go to state 132
    variable                       shift and go to state 42
    procedure_call                 shift and go to state 43
    compound_statement             shift and go to state 44

state 101

    (65) expression -> simple_expression RELOP . simple_expression
    (68) simple_expression -> . simple_expression ADDOP term
    (69) simple_expression -> . term
    (70) term -> . term MULOP factor
    (71) term -> . factor
    (72) factor -> . NUM
    (73) factor -> . DIGITS
    (74) factor -> . variable
    (75) factor -> . ID LPAREN expression_list RPAREN
    (76) factor -> . LPAREN expression_list RPAREN
    (77) factor -> . NOT factor
    (78) factor -> . UMINUS factor
    (56) variable -> . ID id_varpart

    NUM             shift and go to state 73
    DIGITS          shift and go to state 74
    ID              shift and go to state 76
    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    UMINUS          shift and go to state 79

    simple_expression              shift and go to state 133
    term                           shift and go to state 71
    factor                         shift and go to state 72
    variable                       shift and go to state 75

state 102

    (67) expression -> simple_expression EQUAL . simple_expression
    (68) simple_expression -> . simple_expression ADDOP term
    (69) simple_expression -> . term
    (70) term -> . term MULOP factor
    (71) term -> . factor
    (72) factor -> . NUM
    (73) factor -> . DIGITS
    (74) factor -> . variable
    (75) factor -> . ID LPAREN expression_list RPAREN
    (76) factor -> . LPAREN expression_list RPAREN
    (77) factor -> . NOT factor
    (78) factor -> . UMINUS factor
    (56) variable -> . ID id_varpart

    NUM             shift and go to state 73
    DIGITS          shift and go to state 74
    ID              shift and go to state 76
    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    UMINUS          shift and go to state 79

    simple_expression              shift and go to state 134
    term                           shift and go to state 71
    factor                         shift and go to state 72
    variable                       shift and go to state 75

state 103

    (68) simple_expression -> simple_expression ADDOP . term
    (70) term -> . term MULOP factor
    (71) term -> . factor
    (72) factor -> . NUM
    (73) factor -> . DIGITS
    (74) factor -> . variable
    (75) factor -> . ID LPAREN expression_list RPAREN
    (76) factor -> . LPAREN expression_list RPAREN
    (77) factor -> . NOT factor
    (78) factor -> . UMINUS factor
    (56) variable -> . ID id_varpart

    NUM             shift and go to state 73
    DIGITS          shift and go to state 74
    ID              shift and go to state 76
    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    UMINUS          shift and go to state 79

    term                           shift and go to state 135
    factor                         shift and go to state 72
    variable                       shift and go to state 75

state 104

    (70) term -> term MULOP . factor
    (72) factor -> . NUM
    (73) factor -> . DIGITS
    (74) factor -> . variable
    (75) factor -> . ID LPAREN expression_list RPAREN
    (76) factor -> . LPAREN expression_list RPAREN
    (77) factor -> . NOT factor
    (78) factor -> . UMINUS factor
    (56) variable -> . ID id_varpart

    NUM             shift and go to state 73
    DIGITS          shift and go to state 74
    ID              shift and go to state 76
    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    UMINUS          shift and go to state 79

    factor                         shift and go to state 136
    variable                       shift and go to state 75

state 105

    (75) factor -> ID LPAREN . expression_list RPAREN
    (63) expression_list -> . expression_list COM expression
    (64) expression_list -> . expression
    (65) expression -> . simple_expression RELOP simple_expression
    (66) expression -> . simple_expression
    (67) expression -> . simple_expression EQUAL simple_expression
    (68) simple_expression -> . simple_expression ADDOP term
    (69) simple_expression -> . term
    (70) term -> . term MULOP factor
    (71) term -> . factor
    (72) factor -> . NUM
    (73) factor -> . DIGITS
    (74) factor -> . variable
    (75) factor -> . ID LPAREN expression_list RPAREN
    (76) factor -> . LPAREN expression_list RPAREN
    (77) factor -> . NOT factor
    (78) factor -> . UMINUS factor
    (56) variable -> . ID id_varpart

    NUM             shift and go to state 73
    DIGITS          shift and go to state 74
    ID              shift and go to state 76
    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    UMINUS          shift and go to state 79

    expression_list                shift and go to state 137
    expression                     shift and go to state 107
    simple_expression              shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 72
    variable                       shift and go to state 75

state 106

    (76) factor -> LPAREN expression_list . RPAREN
    (63) expression_list -> expression_list . COM expression

    RPAREN          shift and go to state 138
    COM             shift and go to state 139


state 107

    (64) expression_list -> expression .

    RPAREN          reduce using rule 64 (expression_list -> expression .)
    COM             reduce using rule 64 (expression_list -> expression .)
    RBRACKET        reduce using rule 64 (expression_list -> expression .)


state 108

    (77) factor -> NOT factor .

    MULOP           reduce using rule 77 (factor -> NOT factor .)
    RELOP           reduce using rule 77 (factor -> NOT factor .)
    EQUAL           reduce using rule 77 (factor -> NOT factor .)
    ADDOP           reduce using rule 77 (factor -> NOT factor .)
    THEN            reduce using rule 77 (factor -> NOT factor .)
    DO              reduce using rule 77 (factor -> NOT factor .)
    END             reduce using rule 77 (factor -> NOT factor .)
    SEMICOLON       reduce using rule 77 (factor -> NOT factor .)
    ELSE            reduce using rule 77 (factor -> NOT factor .)
    RPAREN          reduce using rule 77 (factor -> NOT factor .)
    COM             reduce using rule 77 (factor -> NOT factor .)
    RBRACKET        reduce using rule 77 (factor -> NOT factor .)
    TO              reduce using rule 77 (factor -> NOT factor .)


state 109

    (78) factor -> UMINUS factor .

    MULOP           reduce using rule 78 (factor -> UMINUS factor .)
    RELOP           reduce using rule 78 (factor -> UMINUS factor .)
    EQUAL           reduce using rule 78 (factor -> UMINUS factor .)
    ADDOP           reduce using rule 78 (factor -> UMINUS factor .)
    THEN            reduce using rule 78 (factor -> UMINUS factor .)
    DO              reduce using rule 78 (factor -> UMINUS factor .)
    END             reduce using rule 78 (factor -> UMINUS factor .)
    SEMICOLON       reduce using rule 78 (factor -> UMINUS factor .)
    ELSE            reduce using rule 78 (factor -> UMINUS factor .)
    RPAREN          reduce using rule 78 (factor -> UMINUS factor .)
    COM             reduce using rule 78 (factor -> UMINUS factor .)
    RBRACKET        reduce using rule 78 (factor -> UMINUS factor .)
    TO              reduce using rule 78 (factor -> UMINUS factor .)


state 110

    (49) statement -> FOR ID ASSIGNOP . expression TO expression DO statement
    (65) expression -> . simple_expression RELOP simple_expression
    (66) expression -> . simple_expression
    (67) expression -> . simple_expression EQUAL simple_expression
    (68) simple_expression -> . simple_expression ADDOP term
    (69) simple_expression -> . term
    (70) term -> . term MULOP factor
    (71) term -> . factor
    (72) factor -> . NUM
    (73) factor -> . DIGITS
    (74) factor -> . variable
    (75) factor -> . ID LPAREN expression_list RPAREN
    (76) factor -> . LPAREN expression_list RPAREN
    (77) factor -> . NOT factor
    (78) factor -> . UMINUS factor
    (56) variable -> . ID id_varpart

    NUM             shift and go to state 73
    DIGITS          shift and go to state 74
    ID              shift and go to state 76
    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    UMINUS          shift and go to state 79

    expression                     shift and go to state 140
    simple_expression              shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 72
    variable                       shift and go to state 75

state 111

    (60) procedure_call -> ID LPAREN expression_list . RPAREN
    (63) expression_list -> expression_list . COM expression

    RPAREN          shift and go to state 141
    COM             shift and go to state 139


state 112

    (57) id_varpart -> LBRACKET expression_list . RBRACKET
    (63) expression_list -> expression_list . COM expression

    RBRACKET        shift and go to state 142
    COM             shift and go to state 139


state 113

    (50) statement -> READ LPAREN variable_list . RPAREN
    (54) variable_list -> variable_list . COM variable

    RPAREN          shift and go to state 143
    COM             shift and go to state 144


state 114

    (55) variable_list -> variable .

    RPAREN          reduce using rule 55 (variable_list -> variable .)
    COM             reduce using rule 55 (variable_list -> variable .)


state 115

    (56) variable -> ID . id_varpart
    (57) id_varpart -> . LBRACKET expression_list RBRACKET
    (58) id_varpart -> .

    LBRACKET        shift and go to state 83
    RPAREN          reduce using rule 58 (id_varpart -> .)
    COM             reduce using rule 58 (id_varpart -> .)

    id_varpart                     shift and go to state 81

state 116

    (51) statement -> WRITE LPAREN expression_list . RPAREN
    (63) expression_list -> expression_list . COM expression

    RPAREN          shift and go to state 145
    COM             shift and go to state 139


state 117

    (52) statement -> WHILE expression DO . statement
    (45) statement -> . variable ASSIGNOP expression
    (46) statement -> . procedure_call
    (47) statement -> . compound_statement
    (48) statement -> . IF expression THEN statement else_part
    (49) statement -> . FOR ID ASSIGNOP expression TO expression DO statement
    (50) statement -> . READ LPAREN variable_list RPAREN
    (51) statement -> . WRITE LPAREN expression_list RPAREN
    (52) statement -> . WHILE expression DO statement
    (53) statement -> .
    (56) variable -> . ID id_varpart
    (59) procedure_call -> . ID
    (60) procedure_call -> . ID LPAREN expression_list RPAREN
    (42) compound_statement -> . BEGIN statement_list END

    IF              shift and go to state 45
    FOR             shift and go to state 46
    READ            shift and go to state 48
    WRITE           shift and go to state 49
    WHILE           shift and go to state 50
    ELSE            reduce using rule 53 (statement -> .)
    END             reduce using rule 53 (statement -> .)
    SEMICOLON       reduce using rule 53 (statement -> .)
    ID              shift and go to state 47
    BEGIN           shift and go to state 26

    statement                      shift and go to state 146
    variable                       shift and go to state 42
    procedure_call                 shift and go to state 43
    compound_statement             shift and go to state 44

state 118

    (41) subprogram_body -> const_declarations var_declarations . compound_statement
    (42) compound_statement -> . BEGIN statement_list END

    BEGIN           shift and go to state 26

    compound_statement             shift and go to state 147

state 119

    (33) formal_parameter -> LPAREN parameter_list . RPAREN
    (35) parameter_list -> parameter_list . SEMICOLON parameter

    RPAREN          shift and go to state 148
    SEMICOLON       shift and go to state 149


state 120

    (36) parameter_list -> parameter .

    RPAREN          reduce using rule 36 (parameter_list -> parameter .)
    SEMICOLON       reduce using rule 36 (parameter_list -> parameter .)


state 121

    (37) parameter -> var_parameter .

    RPAREN          reduce using rule 37 (parameter -> var_parameter .)
    SEMICOLON       reduce using rule 37 (parameter -> var_parameter .)


state 122

    (38) parameter -> value_parameter .

    RPAREN          reduce using rule 38 (parameter -> value_parameter .)
    SEMICOLON       reduce using rule 38 (parameter -> value_parameter .)


state 123

    (39) var_parameter -> VAR . value_parameter
    (40) value_parameter -> . idlist COLON basic_type
    (5) idlist -> . idlist COM ID
    (6) idlist -> . ID

    ID              shift and go to state 15

    value_parameter                shift and go to state 150
    idlist                         shift and go to state 124

state 124

    (40) value_parameter -> idlist . COLON basic_type
    (5) idlist -> idlist . COM ID

    COLON           shift and go to state 151
    COM             shift and go to state 23


state 125

    (32) subprogram_head -> FUNCTION ID formal_parameter COLON . basic_type
    (22) basic_type -> . INTEGER
    (23) basic_type -> . REAL
    (24) basic_type -> . BOOLEAN
    (25) basic_type -> . CHAR

    INTEGER         shift and go to state 59
    REAL            shift and go to state 60
    BOOLEAN         shift and go to state 61
    CHAR            shift and go to state 62

    basic_type                     shift and go to state 152

state 126

    (17) var_declaration -> var_declaration SEMICOLON idlist COLON type .

    SEMICOLON       reduce using rule 17 (var_declaration -> var_declaration SEMICOLON idlist COLON type .)


state 127

    (20) type -> ARRAY LBRACKET period . RBRACKET OF basic_type
    (26) period -> period . COM DIGITS POINTTO DIGITS

    RBRACKET        shift and go to state 153
    COM             shift and go to state 154


state 128

    (27) period -> DIGITS . POINTTO DIGITS

    POINTTO         shift and go to state 155


state 129

    (21) type -> RECORD multype END .

    SEMICOLON       reduce using rule 21 (type -> RECORD multype END .)


state 130

    (79) multype -> multype ID . COLON type SEMICOLON

    COLON           shift and go to state 156


state 131

    (80) multype -> ID COLON . type SEMICOLON
    (19) type -> . basic_type
    (20) type -> . ARRAY LBRACKET period RBRACKET OF basic_type
    (21) type -> . RECORD multype END
    (22) basic_type -> . INTEGER
    (23) basic_type -> . REAL
    (24) basic_type -> . BOOLEAN
    (25) basic_type -> . CHAR

    ARRAY           shift and go to state 57
    RECORD          shift and go to state 58
    INTEGER         shift and go to state 59
    REAL            shift and go to state 60
    BOOLEAN         shift and go to state 61
    CHAR            shift and go to state 62

    type                           shift and go to state 157
    basic_type                     shift and go to state 56

state 132

    (48) statement -> IF expression THEN statement . else_part
    (61) else_part -> . ELSE statement
    (62) else_part -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 159
    END             reduce using rule 62 (else_part -> .)
    SEMICOLON       reduce using rule 62 (else_part -> .)

  ! ELSE            [ reduce using rule 62 (else_part -> .) ]

    else_part                      shift and go to state 158

state 133

    (65) expression -> simple_expression RELOP simple_expression .
    (68) simple_expression -> simple_expression . ADDOP term

    THEN            reduce using rule 65 (expression -> simple_expression RELOP simple_expression .)
    DO              reduce using rule 65 (expression -> simple_expression RELOP simple_expression .)
    END             reduce using rule 65 (expression -> simple_expression RELOP simple_expression .)
    SEMICOLON       reduce using rule 65 (expression -> simple_expression RELOP simple_expression .)
    ELSE            reduce using rule 65 (expression -> simple_expression RELOP simple_expression .)
    RPAREN          reduce using rule 65 (expression -> simple_expression RELOP simple_expression .)
    COM             reduce using rule 65 (expression -> simple_expression RELOP simple_expression .)
    RBRACKET        reduce using rule 65 (expression -> simple_expression RELOP simple_expression .)
    TO              reduce using rule 65 (expression -> simple_expression RELOP simple_expression .)
    ADDOP           shift and go to state 103


state 134

    (67) expression -> simple_expression EQUAL simple_expression .
    (68) simple_expression -> simple_expression . ADDOP term

    THEN            reduce using rule 67 (expression -> simple_expression EQUAL simple_expression .)
    DO              reduce using rule 67 (expression -> simple_expression EQUAL simple_expression .)
    END             reduce using rule 67 (expression -> simple_expression EQUAL simple_expression .)
    SEMICOLON       reduce using rule 67 (expression -> simple_expression EQUAL simple_expression .)
    ELSE            reduce using rule 67 (expression -> simple_expression EQUAL simple_expression .)
    RPAREN          reduce using rule 67 (expression -> simple_expression EQUAL simple_expression .)
    COM             reduce using rule 67 (expression -> simple_expression EQUAL simple_expression .)
    RBRACKET        reduce using rule 67 (expression -> simple_expression EQUAL simple_expression .)
    TO              reduce using rule 67 (expression -> simple_expression EQUAL simple_expression .)
    ADDOP           shift and go to state 103


state 135

    (68) simple_expression -> simple_expression ADDOP term .
    (70) term -> term . MULOP factor

    RELOP           reduce using rule 68 (simple_expression -> simple_expression ADDOP term .)
    EQUAL           reduce using rule 68 (simple_expression -> simple_expression ADDOP term .)
    ADDOP           reduce using rule 68 (simple_expression -> simple_expression ADDOP term .)
    THEN            reduce using rule 68 (simple_expression -> simple_expression ADDOP term .)
    DO              reduce using rule 68 (simple_expression -> simple_expression ADDOP term .)
    END             reduce using rule 68 (simple_expression -> simple_expression ADDOP term .)
    SEMICOLON       reduce using rule 68 (simple_expression -> simple_expression ADDOP term .)
    ELSE            reduce using rule 68 (simple_expression -> simple_expression ADDOP term .)
    RPAREN          reduce using rule 68 (simple_expression -> simple_expression ADDOP term .)
    COM             reduce using rule 68 (simple_expression -> simple_expression ADDOP term .)
    RBRACKET        reduce using rule 68 (simple_expression -> simple_expression ADDOP term .)
    TO              reduce using rule 68 (simple_expression -> simple_expression ADDOP term .)
    MULOP           shift and go to state 104


state 136

    (70) term -> term MULOP factor .

    MULOP           reduce using rule 70 (term -> term MULOP factor .)
    RELOP           reduce using rule 70 (term -> term MULOP factor .)
    EQUAL           reduce using rule 70 (term -> term MULOP factor .)
    ADDOP           reduce using rule 70 (term -> term MULOP factor .)
    THEN            reduce using rule 70 (term -> term MULOP factor .)
    DO              reduce using rule 70 (term -> term MULOP factor .)
    END             reduce using rule 70 (term -> term MULOP factor .)
    SEMICOLON       reduce using rule 70 (term -> term MULOP factor .)
    ELSE            reduce using rule 70 (term -> term MULOP factor .)
    RPAREN          reduce using rule 70 (term -> term MULOP factor .)
    COM             reduce using rule 70 (term -> term MULOP factor .)
    RBRACKET        reduce using rule 70 (term -> term MULOP factor .)
    TO              reduce using rule 70 (term -> term MULOP factor .)


state 137

    (75) factor -> ID LPAREN expression_list . RPAREN
    (63) expression_list -> expression_list . COM expression

    RPAREN          shift and go to state 160
    COM             shift and go to state 139


state 138

    (76) factor -> LPAREN expression_list RPAREN .

    MULOP           reduce using rule 76 (factor -> LPAREN expression_list RPAREN .)
    RELOP           reduce using rule 76 (factor -> LPAREN expression_list RPAREN .)
    EQUAL           reduce using rule 76 (factor -> LPAREN expression_list RPAREN .)
    ADDOP           reduce using rule 76 (factor -> LPAREN expression_list RPAREN .)
    THEN            reduce using rule 76 (factor -> LPAREN expression_list RPAREN .)
    DO              reduce using rule 76 (factor -> LPAREN expression_list RPAREN .)
    END             reduce using rule 76 (factor -> LPAREN expression_list RPAREN .)
    SEMICOLON       reduce using rule 76 (factor -> LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 76 (factor -> LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 76 (factor -> LPAREN expression_list RPAREN .)
    COM             reduce using rule 76 (factor -> LPAREN expression_list RPAREN .)
    RBRACKET        reduce using rule 76 (factor -> LPAREN expression_list RPAREN .)
    TO              reduce using rule 76 (factor -> LPAREN expression_list RPAREN .)


state 139

    (63) expression_list -> expression_list COM . expression
    (65) expression -> . simple_expression RELOP simple_expression
    (66) expression -> . simple_expression
    (67) expression -> . simple_expression EQUAL simple_expression
    (68) simple_expression -> . simple_expression ADDOP term
    (69) simple_expression -> . term
    (70) term -> . term MULOP factor
    (71) term -> . factor
    (72) factor -> . NUM
    (73) factor -> . DIGITS
    (74) factor -> . variable
    (75) factor -> . ID LPAREN expression_list RPAREN
    (76) factor -> . LPAREN expression_list RPAREN
    (77) factor -> . NOT factor
    (78) factor -> . UMINUS factor
    (56) variable -> . ID id_varpart

    NUM             shift and go to state 73
    DIGITS          shift and go to state 74
    ID              shift and go to state 76
    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    UMINUS          shift and go to state 79

    expression                     shift and go to state 161
    simple_expression              shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 72
    variable                       shift and go to state 75

state 140

    (49) statement -> FOR ID ASSIGNOP expression . TO expression DO statement

    TO              shift and go to state 162


state 141

    (60) procedure_call -> ID LPAREN expression_list RPAREN .

    END             reduce using rule 60 (procedure_call -> ID LPAREN expression_list RPAREN .)
    SEMICOLON       reduce using rule 60 (procedure_call -> ID LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 60 (procedure_call -> ID LPAREN expression_list RPAREN .)


state 142

    (57) id_varpart -> LBRACKET expression_list RBRACKET .

    ASSIGNOP        reduce using rule 57 (id_varpart -> LBRACKET expression_list RBRACKET .)
    MULOP           reduce using rule 57 (id_varpart -> LBRACKET expression_list RBRACKET .)
    RELOP           reduce using rule 57 (id_varpart -> LBRACKET expression_list RBRACKET .)
    EQUAL           reduce using rule 57 (id_varpart -> LBRACKET expression_list RBRACKET .)
    ADDOP           reduce using rule 57 (id_varpart -> LBRACKET expression_list RBRACKET .)
    THEN            reduce using rule 57 (id_varpart -> LBRACKET expression_list RBRACKET .)
    DO              reduce using rule 57 (id_varpart -> LBRACKET expression_list RBRACKET .)
    END             reduce using rule 57 (id_varpart -> LBRACKET expression_list RBRACKET .)
    SEMICOLON       reduce using rule 57 (id_varpart -> LBRACKET expression_list RBRACKET .)
    ELSE            reduce using rule 57 (id_varpart -> LBRACKET expression_list RBRACKET .)
    RPAREN          reduce using rule 57 (id_varpart -> LBRACKET expression_list RBRACKET .)
    COM             reduce using rule 57 (id_varpart -> LBRACKET expression_list RBRACKET .)
    RBRACKET        reduce using rule 57 (id_varpart -> LBRACKET expression_list RBRACKET .)
    TO              reduce using rule 57 (id_varpart -> LBRACKET expression_list RBRACKET .)


state 143

    (50) statement -> READ LPAREN variable_list RPAREN .

    END             reduce using rule 50 (statement -> READ LPAREN variable_list RPAREN .)
    SEMICOLON       reduce using rule 50 (statement -> READ LPAREN variable_list RPAREN .)
    ELSE            reduce using rule 50 (statement -> READ LPAREN variable_list RPAREN .)


state 144

    (54) variable_list -> variable_list COM . variable
    (56) variable -> . ID id_varpart

    ID              shift and go to state 115

    variable                       shift and go to state 163

state 145

    (51) statement -> WRITE LPAREN expression_list RPAREN .

    END             reduce using rule 51 (statement -> WRITE LPAREN expression_list RPAREN .)
    SEMICOLON       reduce using rule 51 (statement -> WRITE LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 51 (statement -> WRITE LPAREN expression_list RPAREN .)


state 146

    (52) statement -> WHILE expression DO statement .

    END             reduce using rule 52 (statement -> WHILE expression DO statement .)
    SEMICOLON       reduce using rule 52 (statement -> WHILE expression DO statement .)
    ELSE            reduce using rule 52 (statement -> WHILE expression DO statement .)


state 147

    (41) subprogram_body -> const_declarations var_declarations compound_statement .

    SEMICOLON       reduce using rule 41 (subprogram_body -> const_declarations var_declarations compound_statement .)


state 148

    (33) formal_parameter -> LPAREN parameter_list RPAREN .

    SEMICOLON       reduce using rule 33 (formal_parameter -> LPAREN parameter_list RPAREN .)
    COLON           reduce using rule 33 (formal_parameter -> LPAREN parameter_list RPAREN .)


state 149

    (35) parameter_list -> parameter_list SEMICOLON . parameter
    (37) parameter -> . var_parameter
    (38) parameter -> . value_parameter
    (39) var_parameter -> . VAR value_parameter
    (40) value_parameter -> . idlist COLON basic_type
    (5) idlist -> . idlist COM ID
    (6) idlist -> . ID

    VAR             shift and go to state 123
    ID              shift and go to state 15

    parameter                      shift and go to state 164
    var_parameter                  shift and go to state 121
    value_parameter                shift and go to state 122
    idlist                         shift and go to state 124

state 150

    (39) var_parameter -> VAR value_parameter .

    RPAREN          reduce using rule 39 (var_parameter -> VAR value_parameter .)
    SEMICOLON       reduce using rule 39 (var_parameter -> VAR value_parameter .)


state 151

    (40) value_parameter -> idlist COLON . basic_type
    (22) basic_type -> . INTEGER
    (23) basic_type -> . REAL
    (24) basic_type -> . BOOLEAN
    (25) basic_type -> . CHAR

    INTEGER         shift and go to state 59
    REAL            shift and go to state 60
    BOOLEAN         shift and go to state 61
    CHAR            shift and go to state 62

    basic_type                     shift and go to state 165

state 152

    (32) subprogram_head -> FUNCTION ID formal_parameter COLON basic_type .

    SEMICOLON       reduce using rule 32 (subprogram_head -> FUNCTION ID formal_parameter COLON basic_type .)


state 153

    (20) type -> ARRAY LBRACKET period RBRACKET . OF basic_type

    OF              shift and go to state 166


state 154

    (26) period -> period COM . DIGITS POINTTO DIGITS

    DIGITS          shift and go to state 167


state 155

    (27) period -> DIGITS POINTTO . DIGITS

    DIGITS          shift and go to state 168


state 156

    (79) multype -> multype ID COLON . type SEMICOLON
    (19) type -> . basic_type
    (20) type -> . ARRAY LBRACKET period RBRACKET OF basic_type
    (21) type -> . RECORD multype END
    (22) basic_type -> . INTEGER
    (23) basic_type -> . REAL
    (24) basic_type -> . BOOLEAN
    (25) basic_type -> . CHAR

    ARRAY           shift and go to state 57
    RECORD          shift and go to state 58
    INTEGER         shift and go to state 59
    REAL            shift and go to state 60
    BOOLEAN         shift and go to state 61
    CHAR            shift and go to state 62

    type                           shift and go to state 169
    basic_type                     shift and go to state 56

state 157

    (80) multype -> ID COLON type . SEMICOLON

    SEMICOLON       shift and go to state 170


state 158

    (48) statement -> IF expression THEN statement else_part .

    END             reduce using rule 48 (statement -> IF expression THEN statement else_part .)
    SEMICOLON       reduce using rule 48 (statement -> IF expression THEN statement else_part .)
    ELSE            reduce using rule 48 (statement -> IF expression THEN statement else_part .)


state 159

    (61) else_part -> ELSE . statement
    (45) statement -> . variable ASSIGNOP expression
    (46) statement -> . procedure_call
    (47) statement -> . compound_statement
    (48) statement -> . IF expression THEN statement else_part
    (49) statement -> . FOR ID ASSIGNOP expression TO expression DO statement
    (50) statement -> . READ LPAREN variable_list RPAREN
    (51) statement -> . WRITE LPAREN expression_list RPAREN
    (52) statement -> . WHILE expression DO statement
    (53) statement -> .
    (56) variable -> . ID id_varpart
    (59) procedure_call -> . ID
    (60) procedure_call -> . ID LPAREN expression_list RPAREN
    (42) compound_statement -> . BEGIN statement_list END

    IF              shift and go to state 45
    FOR             shift and go to state 46
    READ            shift and go to state 48
    WRITE           shift and go to state 49
    WHILE           shift and go to state 50
    ELSE            reduce using rule 53 (statement -> .)
    END             reduce using rule 53 (statement -> .)
    SEMICOLON       reduce using rule 53 (statement -> .)
    ID              shift and go to state 47
    BEGIN           shift and go to state 26

    statement                      shift and go to state 171
    variable                       shift and go to state 42
    procedure_call                 shift and go to state 43
    compound_statement             shift and go to state 44

state 160

    (75) factor -> ID LPAREN expression_list RPAREN .

    MULOP           reduce using rule 75 (factor -> ID LPAREN expression_list RPAREN .)
    RELOP           reduce using rule 75 (factor -> ID LPAREN expression_list RPAREN .)
    EQUAL           reduce using rule 75 (factor -> ID LPAREN expression_list RPAREN .)
    ADDOP           reduce using rule 75 (factor -> ID LPAREN expression_list RPAREN .)
    THEN            reduce using rule 75 (factor -> ID LPAREN expression_list RPAREN .)
    DO              reduce using rule 75 (factor -> ID LPAREN expression_list RPAREN .)
    END             reduce using rule 75 (factor -> ID LPAREN expression_list RPAREN .)
    SEMICOLON       reduce using rule 75 (factor -> ID LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 75 (factor -> ID LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 75 (factor -> ID LPAREN expression_list RPAREN .)
    COM             reduce using rule 75 (factor -> ID LPAREN expression_list RPAREN .)
    RBRACKET        reduce using rule 75 (factor -> ID LPAREN expression_list RPAREN .)
    TO              reduce using rule 75 (factor -> ID LPAREN expression_list RPAREN .)


state 161

    (63) expression_list -> expression_list COM expression .

    RPAREN          reduce using rule 63 (expression_list -> expression_list COM expression .)
    COM             reduce using rule 63 (expression_list -> expression_list COM expression .)
    RBRACKET        reduce using rule 63 (expression_list -> expression_list COM expression .)


state 162

    (49) statement -> FOR ID ASSIGNOP expression TO . expression DO statement
    (65) expression -> . simple_expression RELOP simple_expression
    (66) expression -> . simple_expression
    (67) expression -> . simple_expression EQUAL simple_expression
    (68) simple_expression -> . simple_expression ADDOP term
    (69) simple_expression -> . term
    (70) term -> . term MULOP factor
    (71) term -> . factor
    (72) factor -> . NUM
    (73) factor -> . DIGITS
    (74) factor -> . variable
    (75) factor -> . ID LPAREN expression_list RPAREN
    (76) factor -> . LPAREN expression_list RPAREN
    (77) factor -> . NOT factor
    (78) factor -> . UMINUS factor
    (56) variable -> . ID id_varpart

    NUM             shift and go to state 73
    DIGITS          shift and go to state 74
    ID              shift and go to state 76
    LPAREN          shift and go to state 77
    NOT             shift and go to state 78
    UMINUS          shift and go to state 79

    expression                     shift and go to state 172
    simple_expression              shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 72
    variable                       shift and go to state 75

state 163

    (54) variable_list -> variable_list COM variable .

    RPAREN          reduce using rule 54 (variable_list -> variable_list COM variable .)
    COM             reduce using rule 54 (variable_list -> variable_list COM variable .)


state 164

    (35) parameter_list -> parameter_list SEMICOLON parameter .

    RPAREN          reduce using rule 35 (parameter_list -> parameter_list SEMICOLON parameter .)
    SEMICOLON       reduce using rule 35 (parameter_list -> parameter_list SEMICOLON parameter .)


state 165

    (40) value_parameter -> idlist COLON basic_type .

    RPAREN          reduce using rule 40 (value_parameter -> idlist COLON basic_type .)
    SEMICOLON       reduce using rule 40 (value_parameter -> idlist COLON basic_type .)


state 166

    (20) type -> ARRAY LBRACKET period RBRACKET OF . basic_type
    (22) basic_type -> . INTEGER
    (23) basic_type -> . REAL
    (24) basic_type -> . BOOLEAN
    (25) basic_type -> . CHAR

    INTEGER         shift and go to state 59
    REAL            shift and go to state 60
    BOOLEAN         shift and go to state 61
    CHAR            shift and go to state 62

    basic_type                     shift and go to state 173

state 167

    (26) period -> period COM DIGITS . POINTTO DIGITS

    POINTTO         shift and go to state 174


state 168

    (27) period -> DIGITS POINTTO DIGITS .

    RBRACKET        reduce using rule 27 (period -> DIGITS POINTTO DIGITS .)
    COM             reduce using rule 27 (period -> DIGITS POINTTO DIGITS .)


state 169

    (79) multype -> multype ID COLON type . SEMICOLON

    SEMICOLON       shift and go to state 175


state 170

    (80) multype -> ID COLON type SEMICOLON .

    END             reduce using rule 80 (multype -> ID COLON type SEMICOLON .)
    ID              reduce using rule 80 (multype -> ID COLON type SEMICOLON .)


state 171

    (61) else_part -> ELSE statement .

    ELSE            reduce using rule 61 (else_part -> ELSE statement .)
    END             reduce using rule 61 (else_part -> ELSE statement .)
    SEMICOLON       reduce using rule 61 (else_part -> ELSE statement .)


state 172

    (49) statement -> FOR ID ASSIGNOP expression TO expression . DO statement

    DO              shift and go to state 176


state 173

    (20) type -> ARRAY LBRACKET period RBRACKET OF basic_type .

    SEMICOLON       reduce using rule 20 (type -> ARRAY LBRACKET period RBRACKET OF basic_type .)


state 174

    (26) period -> period COM DIGITS POINTTO . DIGITS

    DIGITS          shift and go to state 177


state 175

    (79) multype -> multype ID COLON type SEMICOLON .

    END             reduce using rule 79 (multype -> multype ID COLON type SEMICOLON .)
    ID              reduce using rule 79 (multype -> multype ID COLON type SEMICOLON .)


state 176

    (49) statement -> FOR ID ASSIGNOP expression TO expression DO . statement
    (45) statement -> . variable ASSIGNOP expression
    (46) statement -> . procedure_call
    (47) statement -> . compound_statement
    (48) statement -> . IF expression THEN statement else_part
    (49) statement -> . FOR ID ASSIGNOP expression TO expression DO statement
    (50) statement -> . READ LPAREN variable_list RPAREN
    (51) statement -> . WRITE LPAREN expression_list RPAREN
    (52) statement -> . WHILE expression DO statement
    (53) statement -> .
    (56) variable -> . ID id_varpart
    (59) procedure_call -> . ID
    (60) procedure_call -> . ID LPAREN expression_list RPAREN
    (42) compound_statement -> . BEGIN statement_list END

    IF              shift and go to state 45
    FOR             shift and go to state 46
    READ            shift and go to state 48
    WRITE           shift and go to state 49
    WHILE           shift and go to state 50
    ELSE            reduce using rule 53 (statement -> .)
    END             reduce using rule 53 (statement -> .)
    SEMICOLON       reduce using rule 53 (statement -> .)
    ID              shift and go to state 47
    BEGIN           shift and go to state 26

    statement                      shift and go to state 178
    variable                       shift and go to state 42
    procedure_call                 shift and go to state 43
    compound_statement             shift and go to state 44

state 177

    (26) period -> period COM DIGITS POINTTO DIGITS .

    RBRACKET        reduce using rule 26 (period -> period COM DIGITS POINTTO DIGITS .)
    COM             reduce using rule 26 (period -> period COM DIGITS POINTTO DIGITS .)


state 178

    (49) statement -> FOR ID ASSIGNOP expression TO expression DO statement .

    END             reduce using rule 49 (statement -> FOR ID ASSIGNOP expression TO expression DO statement .)
    SEMICOLON       reduce using rule 49 (statement -> FOR ID ASSIGNOP expression TO expression DO statement .)
    ELSE            reduce using rule 49 (statement -> FOR ID ASSIGNOP expression TO expression DO statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 132 resolved as shift
