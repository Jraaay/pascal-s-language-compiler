programstruct -> program_head ; program_body .
program_head -> program id ( idlist ) | program id 
program_body -> const_declarations
                var_declarations
                subprogram_declarations
                compound_statement
idlist -> idlist , id | id
const_declarations -> const const_declaration ; | ε
const_declaration -> const_declaration ; id = const_value | id = const_value 
const_value -> + num | - num | num | 'letter'
var_declarations -> var var_declaration ; | ε
var_declaration -> var_declaration ; idlist : type | idlist : type
type -> basic_type | array [ period ] of basic_type
basic_type -> integer | real | boolean | char
period -> period , digits .. digits | digits .. digits
subprogram_declarations -> subprogram_declarations
                           subprogram ; | ε
subprogram -> subprogram_head ; subprogram_body
subprogram_head -> procedure id formal_parameter | function id formal_parameter : basic_type 
formal_parameter -> ( parameter_list ) | ε
parameter_list -> parameter_list ; parameter | parameter
parameter -> var_parameter | value_parameter
var_parameter -> var value_parameter
value_parameter -> idlist : basic_type
subprogram_body -> const_declarations
                   var_declarations
                   compound_statement
compound_statement -> begin statement_list end
statement_list -> statement_list ; statement | statement
statement -> variable assignop expression | procedure_call | compound_statement | if expression then statement else_part | for id assignop expression to expression do statement | read ( variable_list ) | write ( expression_list ) | ε
variable_list -> variable_list , variable | variable
variable -> id id_varpart
id_varpart -> [ expression_list ] | ε
procedure_call -> id | id ( expression_list )
else_part -> else statement | ε
expression_list -> expression_list , expression | expression
expression -> simple_expression relop simple_expression | simple_expression
simple_expression -> simple_expression addop term | term
term -> term mulop factor | factor
factor -> num | variable | id ( expression_list ) | ( expression ) | not factor | uminus factor